{"version":3,"file":"HMSBannerAd.js","sourceRoot":"","sources":["../src/www/HMSBannerAd.ts"],"names":[],"mappings":"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","sourcesContent":["import { LayoutBounds, AdParam, Props, AdSize } from './interfaces'\r\nimport { getInitialPropsOfHTMLElementFrom } from './layout'\r\nimport { BannerAdSize, BannerAdEvents, Color } from './HMSConstants'\r\nimport { Ads } from './ads'\r\n\r\nconst bannerViews = new Map<string, HMSBannerAd>()\r\nexport class BannerAlreadyDefinedError extends Error {\r\n    constructor() {\r\n        super()\r\n        this.name = \"BannerAlreadyDefinedError\"\r\n        this.message = \"Banner object with the id specified already defined\"\r\n    }\r\n}\r\nexport class HMSBannerAd extends Ads {\r\n    public divId: string = \"\";\r\n    public element: HTMLElement | null = null;\r\n    public bannerCurrentProps: Props;\r\n    constructor() {\r\n        super(HMSBannerAd.name.toLowerCase())\r\n        this.bannerCurrentProps = {} as Props;\r\n    }\r\n\r\n    on(eventName: BannerAdEvents, callback: () => void): void {\r\n        super.on(eventName, callback);\r\n    }\r\n\r\n    async create(divId: string, bounds?: LayoutBounds): Promise<HMSBannerAd> {\r\n        this.divId = divId\r\n        if (bannerViews.has(divId))\r\n            throw new BannerAlreadyDefinedError()\r\n\r\n        this.element = document.getElementById(this.divId);\r\n        bannerViews.set(divId, this)\r\n        const initialProps: any = getInitialPropsOfHTMLElementFrom(divId);\r\n        if (bounds) {\r\n            if (bounds.marginLeft) initialProps['marginLeft'] = bounds.marginLeft;\r\n            if (bounds.marginTop) initialProps['marginTop'] = bounds.marginTop;\r\n            if (bounds.marginBottom) initialProps['marginBottom'] = bounds.marginBottom;\r\n            if (bounds.marginRight) initialProps['marginRight'] = bounds.marginRight;\r\n        }\r\n\r\n        const bannerMutationObserver = new MutationObserver(() => {\r\n            if (this.element != null) {\r\n                this.forceUpdateBannerXAndY();\r\n            }\r\n        });\r\n        const config = { attributes: true, childList: true, subtree: true };\r\n        bannerMutationObserver.observe(document.body, config);\r\n        this.bannerCurrentProps = initialProps;\r\n        return <Promise<HMSBannerAd>>super.create(initialProps);\r\n    }\r\n\r\n    scroll(): void {\r\n        if (this.element === null) return;\r\n        const bannerRect = this.element.getBoundingClientRect();\r\n        if (this.bannerCurrentProps.x === bannerRect.x && this.bannerCurrentProps.y === bannerRect.y) return;\r\n        this.run('scroll', { 'scrolledX': bannerRect.x, 'scrolledY': bannerRect.y});\r\n    }\r\n\r\n    private forceUpdateBannerXAndY() {\r\n        if (this.element === null) return;\r\n        const bannerRect = this.element.getBoundingClientRect();\r\n        this.run('forceUpdateBannerXAndY', { 'scrolledX': bannerRect.x, 'scrolledY': bannerRect.y,\r\n            'pageYOffset': window.pageYOffset, 'pageXOffset': window.pageXOffset});\r\n    }\r\n\r\n    getAdId(): Promise<string> {\r\n        return this.run('getAdId')\r\n    }\r\n\r\n    setAdId(adId: string): Promise<void> {\r\n        return this.run('setAdId', { 'adId': adId })\r\n    }\r\n\r\n    getBannerAdSize(): Promise<AdSize> {\r\n        return this.run('getBannerAdSize')\r\n    }\r\n\r\n    setBannerAdSize(bannerAdSize: BannerAdSize | AdSize): Promise<void> {\r\n        return this.run('setBannerAdSize', { 'bannerAdSize': bannerAdSize })\r\n    }\r\n\r\n    setBackgroundColor(bgColor: Color): Promise<void> {\r\n        return this.run('setBackgroundColor', { 'backgroundColor': bgColor })\r\n    }\r\n\r\n    setBannerRefresh(bannerRefresh: number): Promise<void> {\r\n        return this.run('setBannerRefresh', { 'bannerRefresh': bannerRefresh })\r\n    }\r\n\r\n    setAdListener(): Promise<void> {\r\n        return this.run('setAdListener')\r\n    }\r\n\r\n    isLoading(): Promise<boolean> {\r\n        return this.run('isLoading')\r\n    }\r\n\r\n    loadAd(adParam: AdParam = {}): Promise<void> {\r\n        return this.run('loadAd', adParam)\r\n    }\r\n\r\n    pause(): Promise<void> {\r\n        return this.run('pause')\r\n    }\r\n\r\n    resume(): Promise<void> {\r\n        return this.run('resume')\r\n    }\r\n\r\n    destroy(): Promise<void> {\r\n        bannerViews.delete(this.divId)\r\n        return this.run('destroy')\r\n    }\r\n\r\n    getHeight(): Promise<number> {\r\n        return this.run('getHeight')\r\n    }\r\n    getHeightPx(): Promise<number> {\r\n        return this.run('getHeightPx')\r\n    }\r\n    getWidth(): Promise<number> {\r\n        return this.run('getWidth')\r\n    }\r\n    getWidthPx(): Promise<number> {\r\n        return this.run('getWidthPx')\r\n    }\r\n    isAutoHeightSize(): Promise<boolean> {\r\n        return this.run('isAutoHeightSize')\r\n    }\r\n    isDynamicSize(): Promise<boolean> {\r\n        return this.run('isDynamicSize')\r\n    }\r\n    isFullWidthSize(): Promise<boolean> {\r\n        return this.run('isFullWidthSize')\r\n    }\r\n\r\n    getCurrentDirectionBannerSize(width: number): Promise<AdSize> {\r\n        return this.run('getCurrentDirectionBannerSize', { \"width\": width })\r\n    }\r\n    getLandscapeBannerSize(width: number): Promise<AdSize> {\r\n        return this.run('getLandscapeBannerSize', { \"width\": width })\r\n    }\r\n    getPortraitBannerSize(width: number): Promise<AdSize> {\r\n        return this.run('getPortraitBannerSize', { \"width\": width })\r\n    }\r\n}\r\n"]}