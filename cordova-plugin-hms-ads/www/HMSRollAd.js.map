{"version":3,"file":"HMSRollAd.js","sourceRoot":"","sources":["../src/www/HMSRollAd.ts"],"names":[],"mappings":"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","sourcesContent":["import { LayoutBounds, AdParam, RollAdLoaderParams, RollAdLoadOptions, Props, Duration } from './interfaces'\r\nimport { getInitialPropsOfHTMLElementFrom } from './layout'\r\nimport { RollAdEvents } from './HMSConstants'\r\nimport { Ads } from './ads'\r\n\r\nconst rollAdViews = new Map<string, HMSRollAd>()\r\nexport class RollAlreadyDefinedError extends Error {\r\n    constructor() {\r\n        super()\r\n        this.name = \"RollAlreadyDefinedError\"\r\n        this.message = \"Roll ad object with the id specified already defined\"\r\n    }\r\n}\r\nexport class HMSRollAd extends Ads {\r\n    public divId: string = \"\";\r\n    public element: HTMLElement | null = null;\r\n    public rollCurrentProps: Props;\r\n    constructor() {\r\n        super(HMSRollAd.name.toLowerCase())\r\n        this.rollCurrentProps = {} as Props;\r\n\r\n    }\r\n\r\n    on(eventName: RollAdEvents, callback: () => void): void {\r\n        super.on(eventName, callback);\r\n    }\r\n\r\n    async create(params: RollAdLoaderParams, divId: string, bounds?: LayoutBounds): Promise<HMSRollAd> {\r\n        this.divId = divId;\r\n        if (rollAdViews.has(divId))\r\n            throw new RollAlreadyDefinedError()\r\n\r\n        const initialProps: any = getInitialPropsOfHTMLElementFrom(divId);\r\n        rollAdViews.set(divId, this)\r\n        this.element = document.getElementById(this.divId);\r\n        const rollMutationObserver = new MutationObserver(() => {\r\n            if(this.element != null){\r\n                this.forceUpdateRollXAndY();\r\n            }\r\n        });\r\n        const config = {attributes: true, childList: true, subtree: true};\r\n        rollMutationObserver.observe(document.body, config);\r\n        if (bounds) {\r\n            if (bounds.marginBottom) initialProps['marginBottom'] = bounds.marginBottom;\r\n            if (bounds.marginRight) initialProps['marginRight'] = bounds.marginRight;\r\n            if (bounds.marginLeft) initialProps['marginLeft'] = bounds.marginLeft;\r\n            if (bounds.marginTop) initialProps['marginTop'] = bounds.marginTop;\r\n        }\r\n        this.rollCurrentProps = initialProps;\r\n        return <Promise<HMSRollAd>>super.create(initialProps, params);\r\n    }\r\n\r\n    scroll(): void {\r\n        if (this.element === null) return;\r\n        const rollRect = this.element.getBoundingClientRect();\r\n        if (this.rollCurrentProps.x === rollRect.x && this.rollCurrentProps.y === rollRect.y) return;\r\n        this.run('scroll', { 'scrolledX': rollRect.x, 'scrolledY': rollRect.y});\r\n    }\r\n\r\n    private forceUpdateRollXAndY() {\r\n        if (this.element === null) return;\r\n        const rollRect = this.element.getBoundingClientRect();\r\n        this.run('forceUpdateRollXAndY', { 'scrolledX': rollRect.x, 'scrolledY': rollRect.y,\r\n            'pageYOffset': window.pageYOffset, 'pageXOffset': window.pageXOffset});\r\n    }\r\n    \r\n    //InstreamLoader\r\n    loadAd(options: RollAdLoadOptions): Promise<void> {\r\n        return this.run('loadAd', options)\r\n    }\r\n    isLoading(): Promise<boolean> {\r\n        return this.run('isLoading')\r\n    }\r\n\r\n    //InstreamView \r\n    destroy(): Promise<void> {\r\n        rollAdViews.delete(this.divId)\r\n        return this.run('destroy')\r\n    }\r\n\r\n    pause(): Promise<void> {\r\n        return this.run('pause')\r\n    }\r\n\r\n    isPlaying(): Promise<boolean> {\r\n        return this.run('isPlaying')\r\n    }\r\n\r\n\r\n    mute(): Promise<void> {\r\n        return this.run('mute')\r\n    }\r\n\r\n\r\n    unmute(): Promise<void> {\r\n        return this.run('unmute')\r\n    }\r\n\r\n    onClose(): Promise<void> {\r\n        return this.run('onClose')\r\n    }\r\n\r\n    play(): Promise<void> {\r\n        return this.run('play')\r\n    }\r\n\r\n    stop(): Promise<void> {\r\n        return this.run('stop')\r\n    }\r\n\r\n    removeInstreamMediaChangeListener(): Promise<void> {\r\n        return this.run('removeInstreamMediaChangeListener')\r\n    }\r\n    removeMediaMuteListener(): Promise<void> {\r\n        return this.run('removeMediaMuteListener')\r\n    }\r\n    removeInstreamMediaStateListener(): Promise<void> {\r\n        return this.run('removeInstreamMediaStateListener')\r\n    }\r\n    setInstreamAds(): Promise<void> {\r\n        return this.run('setInstreamAds')\r\n    }\r\n\r\n    setInstreamMediaChangeListener(): Promise<void> {\r\n        return this.run('setInstreamMediaChangeListener')\r\n    }\r\n    setMediaMuteListener(): Promise<void> {\r\n        return this.run('setMediaMuteListener')\r\n    }\r\n    setInstreamMediaStateListener(): Promise<void> {\r\n        return this.run('setInstreamMediaStateListener')\r\n    }\r\n    setOnInstreamAdClickListener(): Promise<void> {\r\n        return this.run('setOnInstreamAdClickListener')\r\n    }\r\n\r\n    //InstreamAd\r\n    getAdSource(): Promise<string> {\r\n        return this.run('getAdSource')\r\n    }\r\n    getDuration(): Promise<Duration> {\r\n        return this.run('getDuration')\r\n    }\r\n    getWhyThisAd(): Promise<string> {\r\n        return this.run('getWhyThisAd')\r\n    }\r\n    getAdSign(): Promise<string> {\r\n        return this.run('getAdSign')\r\n    }\r\n    isClicked(): Promise<boolean> {\r\n        return this.run('isClicked')\r\n    }\r\n    isExpired(): Promise<boolean> {\r\n        return this.run('isExpired')\r\n    }\r\n    isImageAd(): Promise<boolean> {\r\n        return this.run('isImageAd')\r\n    }\r\n    isShown(): Promise<boolean> {\r\n        return this.run('isShown')\r\n    }\r\n    isVideoAd(): Promise<boolean> {\r\n        return this.run('isVideoAd')\r\n    }\r\n    getCallToAction(): Promise<string> {\r\n        return this.run('getCallToAction')\r\n    }\r\n\r\n}\r\n"]}