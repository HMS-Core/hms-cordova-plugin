{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../src/www/interfaces.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;;;;;;;EAcE;AACF,mCAQiB;AA+HJ,QAAA,oBAAoB,GAAW,UAAU,CAAC;AAC1C,QAAA,aAAa,GAAW,CAAC,CAAC;AAC1B,QAAA,aAAa,GAAW,KAAK,CAAC;AAC9B,QAAA,gBAAgB,GAAW,KAAK,CAAC;AACjC,QAAA,eAAe,GAAW,EAAE,CAAC;AAC7B,QAAA,0BAA0B,GAAW,qBAAqB,CAAC;AAC3D,QAAA,0BAA0B,GAAW,gBAAgB,CAAC;AACtD,QAAA,wBAAwB,GAAW,aAAa,CAAC;AACjD,QAAA,gBAAgB,GAAa;IACtC,SAAS,EAAE,qBAAa;IACxB,MAAM,EAAE,GAAG;CACd,CAAA;AACY,QAAA,gCAAgC,GAAkB;IAC3D,eAAe,EAAE,IAAI;CACxB,CAAA;AACY,QAAA,sBAAsB,GAAkB,EAAE,CAAA;AAC1C,QAAA,uBAAuB,GAAkB;IAClD,UAAU,EAAE,+BAAuB,CAAC,2BAA2B;IAC/D,WAAW,EAAE,gCAAwB,CAAC,wBAAwB;CACjE,CAAA;AACY,QAAA,kBAAkB,GAAc;IACzC,MAAM,EAAE,wCAAgC;IACxC,MAAM,EAAE,8BAAsB;CACjC,CAAA;AACY,QAAA,kBAAkB,GAAc;IACzC,MAAM,EAAE,8BAAsB;CACjC,CAAA","sourcesContent":["/*\r\n    Copyright 2020-2021. Huawei Technologies Co., Ltd. All rights reserved.\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\")\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n        https://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n*/\r\nimport {\r\n    ChannelPolicy,\r\n    DataType,\r\n    MessagePolicyDistanceType,\r\n    MessagePolicyFindingMode,\r\n    MessagePolicyTtlSeconds,\r\n    StatusCode,\r\n    TransferState\r\n} from \"./enums\";\r\n\r\n\r\nexport interface Message {\r\n    content: number[],\r\n    namespace?: string,\r\n    type?: string\r\n}\r\n\r\nexport interface EddystoneUid {\r\n    hexNamespace: string,\r\n    hexInstance: string\r\n}\r\n\r\nexport interface IBeaconId {\r\n    iBeaconUuid: string,\r\n    major: number,\r\n    minor: number\r\n}\r\n\r\nexport interface NamespaceType {\r\n    namespace: string,\r\n    type: string\r\n}\r\n\r\nexport interface MessagePicker {\r\n    includeAllTypes?: boolean,\r\n    eddystoneUids?: EddystoneUid[],\r\n    iBeaconIds?: IBeaconId[],\r\n    namespaceTypes?: NamespaceType[]\r\n}\r\n\r\nexport interface MessagePolicy {\r\n    distanceType?: MessagePolicyDistanceType,\r\n    findingMode?: MessagePolicyFindingMode,\r\n    ttlSeconds?: MessagePolicyTtlSeconds\r\n}\r\n\r\nexport interface PutOption {\r\n    policy?: MessagePolicy\r\n}\r\n\r\nexport interface GetOption {\r\n    picker?: MessagePicker,\r\n    policy?: MessagePolicy\r\n}\r\n\r\nexport interface BleSignal {\r\n    rssi: number,\r\n    txPower: number\r\n}\r\n\r\nexport interface Distance {\r\n    precision: number,\r\n    meters: number\r\n}\r\n\r\nexport interface EndpointId {\r\n    endpointId: string\r\n}\r\n\r\nexport interface ConnectInfo {\r\n    endpointId: string,\r\n    endpointName: string,\r\n    authCode: string,\r\n    isRemoteConnect: boolean\r\n}\r\n\r\nexport interface ConnectResult {\r\n    endpointId: string,\r\n    statusCode: StatusCode,\r\n    statusMessage: string,\r\n    channelPolicy: ChannelPolicy\r\n}\r\n\r\nexport interface ScanEndpointInfo {\r\n    endpointId: string,\r\n    serviceId: string,\r\n    name: string\r\n}\r\n\r\nexport interface Data {\r\n    endpointId: string,\r\n    dataType: DataType,\r\n    dataId: string,\r\n    size?: number,\r\n    data?: number[],\r\n    fileUri?: string\r\n}\r\n\r\nexport interface TransferStateUpdate {\r\n    endpointId: string,\r\n    dataId: string,\r\n    status: TransferState,\r\n    transferredBytes: number,\r\n    totalBytes: number\r\n}\r\n\r\nexport interface BleSignalUpdate {\r\n    message: Message,\r\n    bleSignal: BleSignal\r\n}\r\n\r\nexport interface DistanceUpdate {\r\n    message: Message,\r\n    distance: Distance\r\n}\r\n\r\nexport interface MessageTimeout {\r\n    message: Message,\r\n    status: string\r\n}\r\n\r\nexport interface PermissionUpdate {\r\n    grantPermission: boolean\r\n}\r\n\r\nexport interface AuthCodeUpdate {\r\n    endpointId: string,\r\n    authCode: string\r\n}\r\n\r\nexport interface WifiShareResult {\r\n    endpointId: string,\r\n    statusCode: StatusCode\r\n}\r\n\r\nexport const BLE_UNKNOWN_TX_POWER: number = 0x80000000;\r\nexport const PRECISION_LOW: number = 1;\r\nexport const MAX_SIZE_DATA: number = 32768;\r\nexport const MAX_CONTENT_SIZE: number = 65536;\r\nexport const MAX_TYPE_LENGTH: number = 16;\r\nexport const MESSAGE_NAMESPACE_RESERVED: string = \"_reserved_namespace\";\r\nexport const MESSAGE_TYPE_EDDYSTONE_UID: string = \"_eddystone_uid\";\r\nexport const MESSAGE_TYPE_I_BEACON_ID: string = \"_ibeacon_id\";\r\nexport const DISTANCE_UNKNOWN: Distance = {\r\n    precision: PRECISION_LOW,\r\n    meters: NaN\r\n}\r\nexport const MESSAGE_PICKER_INCLUDE_ALL_TYPES: MessagePicker = {\r\n    includeAllTypes: true\r\n}\r\nexport const MESSAGE_POLICY_DEFAULT: MessagePolicy = {}\r\nexport const MESSAGE_POLICY_BLE_ONLY: MessagePolicy = {\r\n    ttlSeconds: MessagePolicyTtlSeconds.POLICY_TTL_SECONDS_INFINITE,\r\n    findingMode: MessagePolicyFindingMode.POLICY_FINDING_MODE_SCAN\r\n}\r\nexport const GET_OPTION_DEFAULT: GetOption = {\r\n    picker: MESSAGE_PICKER_INCLUDE_ALL_TYPES,\r\n    policy: MESSAGE_POLICY_DEFAULT\r\n}\r\nexport const PUT_OPTION_DEFAULT: PutOption = {\r\n    policy: MESSAGE_POLICY_DEFAULT\r\n}"]}