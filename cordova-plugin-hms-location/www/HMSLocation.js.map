{"version":3,"file":"HMSLocation.js","sourceRoot":"","sources":["../src/www/HMSLocation.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;EAcE;AACF,mCAAoC;AAWpC,uDAAwD;AACxD,iEAAkE;AAClE,mFAAoF;AAEpF,uDAAwD;AACxD,+EAAgF;AAEhF,0CAAuB;AACvB,+CAA4B;AAE5B,IAAI,uBAAwC,CAAC;AAC7C,IAAI,uBAAwC,CAAC;AAC7C,IAAI,mCAAyD,CAAC;AAC9D,IAAI,qCAAoE,CAAC;AACzE,IAAI,mCAAgE,CAAC;AAErE,SAAgB,kBAAkB;IAC9B,IAAI,uBAAuB,IAAI,IAAI,EAAE;QACjC,uBAAuB,GAAG,IAAI,qCAAmB,EAAE,CAAC;KACvD;IACD,OAAO,uBAAuB,CAAC;AACnC,CAAC;AALD,gDAKC;AAED,SAAgB,8BAA8B;IAC1C,IAAI,mCAAmC,IAAI,IAAI,EAAE;QAC7C,mCAAmC,GAAG,IAAI,+CAAwB,EAAE,CAAC;KACxE;IACD,OAAO,mCAAmC,CAAC;AAC/C,CAAC;AALD,wEAKC;AAED,SAAgB,gCAAgC;IAC5C,IAAI,qCAAqC,IAAI,IAAI,EAAE;QAC/C,qCAAqC,GAAG,IAAI,iEAAiC,EAAE,CAAC;KACnF;IACD,OAAO,qCAAqC,CAAC;AACjD,CAAC;AALD,4EAKC;AAED,SAAgB,kBAAkB,CAAC,QAAgB,EAAE,OAAgB;IACjE,IAAI,uBAAuB,IAAI,IAAI,EAAE;QACjC,uBAAuB,GAAG,IAAI,qCAAmB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;KACxE;IACD,OAAO,uBAAuB,CAAC;AACnC,CAAC;AALD,gDAKC;AAED,SAAgB,8BAA8B;IAC1C,IAAI,mCAAmC,IAAI,IAAI,EAAE;QAC7C,mCAAmC,GAAG,IAAI,6DAA+B,EAAE,CAAC;KAC/E;IACD,OAAO,mCAAmC,CAAC;AAC/C,CAAC;AALD,wEAKC;AAED,SAAgB,aAAa;IACzB,OAAO,IAAA,iBAAS,EAAC,aAAa,EAAE,eAAe,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC;AACxE,CAAC;AAFD,sCAEC;AAED,SAAgB,YAAY;IACxB,OAAO,IAAA,iBAAS,EAAC,aAAa,EAAE,eAAe,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC;AACvE,CAAC;AAFD,oCAEC;AAED,SAAgB,WAAW,CAAC,KAAa,EAAE,QAA2G;IAClJ,MAAM,CAAC,iBAAiB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AAC9C,CAAC;AAFD,kCAEC;AAED,SAAS,UAAU;IACf,OAAO,IAAA,iBAAS,EAAC,aAAa,EAAE,eAAe,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;AACrE,CAAC;AAED,UAAU,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC,CAAC","sourcesContent":["/*\r\n    Copyright 2020-2023. Huawei Technologies Co., Ltd. All rights reserved.\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\")\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n        https://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n*/\r\nimport { asyncExec } from './utils';\r\nimport {\r\n    ActivityConversionResponse,\r\n    ActivityIdentificationResponse,\r\n    ActivityIdentificationService,\r\n    FusedLocationService,\r\n    GeocoderService,\r\n    GeofenceService,\r\n    LocationResult,\r\n    CoordinateConversionService\r\n} from \"./interfaces\";\r\nimport { GeofenceServiceImpl } from \"./geofenceService\";\r\nimport { FusedLocationServiceImpl } from \"./fusedLocationService\";\r\nimport { ActivityIdentificationServiceImpl } from \"./activityIdentificationService\";\r\nimport { Events } from './enums';\r\nimport { GeocoderServiceImpl } from './geocoderService';\r\nimport { CoordinateConversionServiceImpl } from './coordinateConversionService';\r\n\r\nexport * from './enums'\r\nexport * from './interfaces'\r\n\r\nlet geofenceServiceInstance: GeofenceService;\r\nlet geocoderServiceInstance: GeocoderService;\r\nlet fusedLocationProviderClientInstance: FusedLocationService;\r\nlet activityIdentificationServiceInstance: ActivityIdentificationService;\r\nlet coordinateConversionServiceInstance: CoordinateConversionService;\r\n\r\nexport function getGeofenceService(): GeofenceService {\r\n    if (geofenceServiceInstance == null) {\r\n        geofenceServiceInstance = new GeofenceServiceImpl();\r\n    }\r\n    return geofenceServiceInstance;\r\n}\r\n\r\nexport function getFusedLocationProviderClient(): FusedLocationService {\r\n    if (fusedLocationProviderClientInstance == null) {\r\n        fusedLocationProviderClientInstance = new FusedLocationServiceImpl();\r\n    }\r\n    return fusedLocationProviderClientInstance;\r\n}\r\n\r\nexport function getActivityIdentificationService(): ActivityIdentificationService {\r\n    if (activityIdentificationServiceInstance == null) {\r\n        activityIdentificationServiceInstance = new ActivityIdentificationServiceImpl();\r\n    }\r\n    return activityIdentificationServiceInstance;\r\n}\r\n\r\nexport function getGeocoderService(language: string, country?: string): GeocoderService {\r\n    if (geocoderServiceInstance == null) {\r\n        geocoderServiceInstance = new GeocoderServiceImpl(language, country);\r\n    }\r\n    return geocoderServiceInstance;\r\n}\r\n\r\nexport function getCoordinateConversionService(): CoordinateConversionService {\r\n    if (coordinateConversionServiceInstance == null) {\r\n        coordinateConversionServiceInstance = new CoordinateConversionServiceImpl();\r\n    }\r\n    return coordinateConversionServiceInstance;\r\n}\r\n\r\nexport function disableLogger(): Promise<void> {\r\n    return asyncExec('HMSLocation', 'PluginService', ['disableLogger']);\r\n}\r\n\r\nexport function enableLogger(): Promise<void> {\r\n    return asyncExec('HMSLocation', 'PluginService', ['enableLogger']);\r\n}\r\n\r\nexport function addListener(event: Events, callback: (data: LocationResult | [] | ActivityConversionResponse | ActivityIdentificationResponse) => void) {\r\n    window.subscribeHMSEvent(event, callback);\r\n}\r\n\r\nfunction initialize() {\r\n    return asyncExec('HMSLocation', 'PluginService', ['initialize']);\r\n}\r\n\r\ninitialize().then(value => console.log(\"Plugin is active.\")).catch(reason => console.log(\"Error occurred while initializing plugin.\"));\r\n"]}