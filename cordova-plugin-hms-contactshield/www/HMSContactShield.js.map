{"version":3,"file":"HMSContactShield.js","sourceRoot":"","sources":["../src/www/HMSContactShield.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA;;;;;;;;;;;;;;EAcE;AACF,mCAAmC;AAEnC,IAAY,oBAEX;AAFD,WAAY,oBAAoB;IAC5B,0GAA8B,CAAA;AAClC,CAAC,EAFW,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QAE/B;AAED,IAAY,mBAEX;AAFD,WAAY,mBAAmB;IAC3B,oDAA6B,CAAA;AACjC,CAAC,EAFW,mBAAmB,GAAnB,2BAAmB,KAAnB,2BAAmB,QAE9B;AAED,IAAY,aAMX;AAND,WAAY,aAAa;IACrB,iFAAgE,CAAA;IAChE,2DAA0C,CAAA;IAC1C,uEAAsD,CAAA;IACtD,qFAAoE,CAAA;IACpE,iFAAgE,CAAA;AACpE,CAAC,EANW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAMxB;AAED,IAAY,SAUX;AAVD,WAAY,SAAS;IACjB,qEAAsB,CAAA;IACtB,mEAAqB,CAAA;IACrB,6DAAkB,CAAA;IAClB,2EAAyB,CAAA;IACzB,mEAAqB,CAAA;IACrB,6EAA0B,CAAA;IAC1B,+DAAmB,CAAA;IACnB,uEAAuB,CAAA;IACvB,qEAAsB,CAAA;AAC1B,CAAC,EAVW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAUpB;AAED,IAAY,aAWX;AAXD,WAAY,aAAa;IACrB,qEAAkB,CAAA;IAClB,sEAAmB,CAAA;IACnB,kFAA0B,CAAA;IAC1B,4FAA+B,CAAA;IAC/B,4EAAuB,CAAA;IACvB,4GAAuC,CAAA;IACvC,kHAA0C,CAAA;IAC1C,gHAAyC,CAAA;IACzC,sFAA4B,CAAA;IAC5B,gHAAyC,CAAA;AAC7C,CAAC,EAXW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAWxB;AAoFD,SAAgB,SAAS;IACrB,OAAO,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC;AAC/E,CAAC;AAFD,8BAEC;AACD,SAAgB,gBAAgB,CAAC,KAAa;IAC1C,OAAO,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1G,CAAC;AAFD,4CAEC;AACD,SAAgB,kBAAkB,CAAC,gBAAwB;IACvD,OAAO,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,oBAAoB,EAAE,gBAAgB,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,oBAAoB,CAAC,yBAAyB,CAAC,CAAC,CAAC;AAC9K,CAAC;AAFD,gDAEC;AACD,SAAgB,qBAAqB,CAAC,gBAAwB;IAC1D,OAAO,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,uBAAuB,EAAE,gBAAgB,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,oBAAoB,CAAC,yBAAyB,CAAC,CAAC,CAAC;AACjL,CAAC;AAFD,sDAEC;AACD,SAAgB,8BAA8B,CAAC,gBAAwB;IACnE,OAAO,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,gCAAgC,EAAE,gBAAgB,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,oBAAoB,CAAC,yBAAyB,CAAC,CAAC,CAAC;AAC1L,CAAC;AAFD,wEAEC;AACD,SAAgB,iBAAiB;IAC7B,OAAO,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,mBAAmB,CAAC,CAAC,CAAC;AACvF,CAAC;AAFD,8CAEC;AACD,SAAgB,gBAAgB,CAAC,KAAa;IAC1C,OAAO,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1G,CAAC;AAFD,4CAEC;AACD,SAAgB,gBAAgB,CAAC,KAAa;IAC1C,OAAO,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1G,CAAC;AAFD,4CAEC;AACD,SAAgB,cAAc;IAC1B,OAAO,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,gBAAgB,CAAC,CAAC,CAAC;AACpF,CAAC;AAFD,wCAEC;AACD,SAAsB,sBAAsB;;QACxC,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,wBAAwB,CAAC,CAAC,CAAC;QAC1G,OAAO,MAAM,CAAC;IAClB,CAAC;CAAA;AAHD,wDAGC;AACD,SAAgB,iBAAiB,CAAC,aAA4B;IAC1D,eAAe;IACf,aAAa,CAAC,sBAAsB,GAAG,MAAM,CAAC,MAAM,CAAC;QACjD,6BAA6B,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QACvC,qBAAqB,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/C,iBAAiB,EAAE,EAAE;QACrB,4BAA4B,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACtD,wBAAwB,EAAE,EAAE;QAC5B,kBAAkB,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAC5C,cAAc,EAAE,EAAE;QAClB,0BAA0B,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACpD,sBAAsB,EAAE,EAAE;QAC1B,yBAAyB,EAAE,CAAC;KAC/B,EAAE,aAAa,CAAC,sBAAsB,CAAC,CAAA;IACxC,OAAO,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,mBAAmB,EAAE,aAAa,CAAC,CAAC,CAAC;AACtG,CAAC;AAfD,8CAeC;AACD,SAAgB,oBAAoB,CAAC,aAA4B;IAC7D,eAAe;IACf,aAAa,CAAC,sBAAsB,GAAG,MAAM,CAAC,MAAM,CAAC;QACjD,6BAA6B,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QACvC,qBAAqB,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/C,iBAAiB,EAAE,EAAE;QACrB,4BAA4B,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACtD,wBAAwB,EAAE,EAAE;QAC5B,kBAAkB,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAC5C,cAAc,EAAE,EAAE;QAClB,0BAA0B,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACpD,sBAAsB,EAAE,EAAE;QAC1B,yBAAyB,EAAE,CAAC;KAC/B,EAAE,aAAa,CAAC,sBAAsB,CAAC,CAAA;IACxC,OAAO,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,sBAAsB,EAAE,aAAa,CAAC,CAAC,CAAC;AACzG,CAAC;AAfD,oDAeC;AACD,SAAgB,aAAa;IACzB,OAAO,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,eAAe,CAAC,CAAC,CAAC;AACnF,CAAC;AAFD,sCAEC;AACD,SAAgB,YAAY;IACxB,OAAO,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC;AAClF,CAAC;AAFD,oCAEC;AACD,SAAgB,cAAc,CAAC,KAAa,EAAE,QAA6B;IACvE,MAAM,CAAC,iBAAiB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AAC9C,CAAC;AAFD,wCAEC;AACD,SAAgB,gBAAgB;IAC5B,OAAO,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAC;AACtF,CAAC;AAFD,4CAEC;AACD,SAAgB,kBAAkB;IAC9B,OAAO,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,oBAAoB,CAAC,CAAC,CAAC;AACxF,CAAC;AAFD,gDAEC;AACD,SAAgB,aAAa,CAAC,UAAyB;IACnD,OAAO,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC,CAAC;AAC/F,CAAC;AAFD,sCAEC;AACD,SAAgB,kBAAkB,CAAC,WAA4B;IAC3D,OAAO,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,oBAAoB,EAAE,WAAW,CAAC,CAAC,CAAC;AACrG,CAAC;AAFD,gDAEC;AACD,SAAgB,SAAS;IACrB,OAAO,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC;AAC/E,CAAC;AAFD,8BAEC;AACD,SAAgB,uBAAuB;IACnC,OAAO,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,yBAAyB,CAAC,CAAC,CAAC;AAC7F,CAAC;AAFD,0DAEC;AACD,SAAgB,8BAA8B;IAC1C,OAAO,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,gCAAgC,CAAC,CAAC,CAAC;AACpG,CAAC;AAFD,wEAEC;AACD,SAAgB,gCAAgC;IAC5C,OAAO,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,kCAAkC,CAAC,CAAC,CAAC;AACtG,CAAC;AAFD,4EAEC;AACD,SAAgB,wBAAwB,CAAC,SAA+B;IACpE,OAAO,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,0BAA0B,EAAE,SAAS,CAAC,CAAC,CAAC;AACzG,CAAC;AAFD,4DAEC;AACD,SAAgB,wBAAwB;IACpC,OAAO,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,0BAA0B,CAAC,CAAC,CAAC;AAC9F,CAAC;AAFD,4DAEC;AACD,SAAgB,cAAc,CAAC,WAAqC;IAChE,eAAe;IACf,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC;QACxB,mBAAmB,EAAE,CAAC,CAAC,CAAC;QACxB,uBAAuB,EAAE,CAAC,CAAC,CAAC;QAC5B,0BAA0B,EAAE,CAAC,CAAC,CAAC;QAC/B,0BAA0B,EAAE,CAAC,CAAC,CAAC;QAC/B,uBAAuB,EAAE,CAAC;QAC1B,cAAc,EAAE,CAAC;KACpB,EAAE,WAAW,CAAC,CAAA;IACf,OAAO,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC,CAAC;AACjG,CAAC;AAXD,wCAWC;AACD,SAAgB,qBAAqB,CAAC,cAAiC;IACnE,eAAe;IACf,cAAc,CAAC,sBAAsB,GAAG,MAAM,CAAC,MAAM,CAAC;QAClD,6BAA6B,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QACvC,qBAAqB,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAC/C,iBAAiB,EAAE,EAAE;QACrB,4BAA4B,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACtD,wBAAwB,EAAE,EAAE;QAC5B,kBAAkB,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAC5C,cAAc,EAAE,EAAE;QAClB,0BAA0B,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACpD,sBAAsB,EAAE,EAAE;QAC1B,yBAAyB,EAAE,CAAC;KAC/B,EAAE,cAAc,CAAC,sBAAsB,CAAC,CAAA;IACzC,OAAO,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,uBAAuB,EAAE,cAAc,CAAC,CAAC,CAAC;AAC3G,CAAC;AAfD,sDAeC;AACD,SAAgB,yBAAyB,CAAC,KAAe;IACrD,OAAO,iBAAS,CAAC,kBAAkB,EAAE,qBAAqB,EAAE,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC,CAAC;AACtG,CAAC;AAFD,8DAEC","sourcesContent":["/*\r\n    Copyright 2020-2021. Huawei Technologies Co., Ltd. All rights reserved.\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\")\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n        https://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n*/\r\nimport { asyncExec } from './utils'\r\n\r\nexport enum ContactShieldSetting {\r\n    DEFAULT_INCUBATION_PERIOD = 14\r\n}\r\n\r\nexport enum ContactShieldEngine {\r\n    TOKEN_A = \"TOKEN_WINDOW_MODE\"\r\n}\r\n\r\nexport enum HMSPermission {\r\n    ACCESS_NETWORK_STATE = \"android.permission.ACCESS_NETWORK_STATE\",\r\n    BLUETOOTH = \"android.permission.BLUETOOTH\",\r\n    BLUETOOTH_ADMIN = \"android.permission.BLUETOOTH_ADMIN\",\r\n    ACCESS_COARSE_LOCATION = \"android.permission.ACCESS_COARSE_LOCATION\",\r\n    ACCESS_FINE_LOCATION = \"android.permission.ACCESS_FINE_LOCATION\"\r\n}\r\n\r\nexport enum RiskLevel {\r\n    RISK_LEVEL_INVALID = 0,\r\n    RISK_LEVEL_LOWEST = 1,\r\n    RISK_LEVEL_LOW = 2,\r\n    RISK_LEVEL_MEDIUM_LOW = 3,\r\n    RISK_LEVEL_MEDIUM = 4,\r\n    RISK_LEVEL_MEDIUM_HIGH = 5,\r\n    RISK_LEVEL_HIGH = 6,\r\n    RISK_LEVEL_EXT_HIGH = 7,\r\n    RISK_LEVEL_HIGHEST = 8\r\n}\r\n\r\nexport enum HMSStatusCode {\r\n    STATUS_SUCCESS = 0,\r\n    STATUS_FAILURE = -1,\r\n    STATUS_API_DISORDER = 8001,\r\n    STATUS_APP_QUOTA_LIMITED = 8100,\r\n    STATUS_DISK_FULL = 8101,\r\n    STATUS_BLUETOOTH_OPERATION_ERROR = 8102,\r\n    STATUS_MISSING_PERMISSION_BLUETOOTH = 8016,\r\n    STATUS_MISSING_SETTING_LOCATION_ON = 8020,\r\n    STATUS_INTERNAL_ERROR = 8060,\r\n    STATUS_MISSING_PERMISSION_INTERNET = 8064\r\n}\r\n\r\nexport interface PeriodicKey {\r\n    content: Int8Array;\r\n    initialRiskLevel: number;\r\n    periodicKeyLifeTime: number;\r\n    periodicKeyValidTime: number;\r\n    reportType: number;\r\n}\r\n\r\nexport interface SharedKeyData {\r\n    token: string;\r\n    diagnosisConfiguration: DiagnosisConfiguration;\r\n    fileList: string[]\r\n}\r\n\r\nexport interface SharedKeyDataKeys {\r\n    token: string;\r\n    diagnosisConfiguration: DiagnosisConfiguration;\r\n    fileList: string[];\r\n    publicKeys: string[];\r\n}\r\n\r\nexport interface SharedKeyDataMapping {\r\n    daysSinceCreationToContagiousness: any;\r\n    defaultReportType: number;\r\n    defaultContagiousness: number;\r\n}\r\n\r\nexport interface DailySketchConfiguration {\r\n    weightsOfReportType: number[],\r\n    weightsOfContagiousness: number[],\r\n    thresholdOfAttenuationInDb: number[],\r\n    weightsOfAttenuationBucket: number[],\r\n    thresholdOfDaysSinceHit: number,\r\n    minWindowScore: number,\r\n}\r\n\r\nexport interface DiagnosisConfiguration {\r\n    attenuationDurationThresholds?: number[];\r\n    attenuationRiskValues?: number[];\r\n    attenuationWeight?: number;\r\n    daysAfterContactedRiskValues?: number[];\r\n    daysAfterContactedWeight?: number;\r\n    durationRiskValues?: number[];\r\n    durationWeight?: number;\r\n    initialRiskLevelRiskValues?: number[];\r\n    initialRiskLevelWeight?: number;\r\n    minimumRiskValueThreshold?: number;\r\n}\r\n\r\nexport interface ContactSketch {\r\n    attenuationDurations: number[];\r\n    daysSinceLastHit: number;\r\n    maxRiskValue: number;\r\n    numberOfHits: number;\r\n    summationRiskValue: number;\r\n}\r\n\r\nexport interface ContactDetail {\r\n    attenuationDurations: number[];\r\n    attenuationRiskValue: number;\r\n    dayNumber: number;\r\n    durationMinutes: number;\r\n    initialRiskLevel: number;\r\n    totalRiskValue: number;\r\n}\r\nexport interface ContactWindow {\r\n    dateMillis: number;\r\n    reportType: number;\r\n    scanInfos: ScanInfo[];\r\n}\r\n\r\nexport interface ScanInfo {\r\n    averageAttenuation: number;\r\n    minimumAttenuation: number;\r\n    secondsSinceLastScan: number;\r\n}\r\n\r\nexport interface StatusCode {\r\n    statusCode: number;\r\n    statusMessage: string;\r\n}\r\n\r\nexport function clearData(): Promise<void> {\r\n    return asyncExec('HMSContactShield', 'ContactShieldModule', [\"clearData\"]);\r\n}\r\nexport function getContactDetail(token: string): Promise<ContactDetail[]> {\r\n    return asyncExec('HMSContactShield', 'ContactShieldModule', ['getContactDetail', token ? token : \"\"]);\r\n}\r\nexport function startContactShield(incubationPeriod: number): Promise<void> {\r\n    return asyncExec('HMSContactShield', 'ContactShieldModule', ['startContactShield', incubationPeriod ? incubationPeriod : ContactShieldSetting.DEFAULT_INCUBATION_PERIOD]);\r\n}\r\nexport function startContactShieldOld(incubationPeriod: number): Promise<void> {\r\n    return asyncExec('HMSContactShield', 'ContactShieldModule', ['startContactShieldOld', incubationPeriod ? incubationPeriod : ContactShieldSetting.DEFAULT_INCUBATION_PERIOD]);\r\n}\r\nexport function startContactShieldNoPersistent(incubationPeriod: number): Promise<void> {\r\n    return asyncExec('HMSContactShield', 'ContactShieldModule', ['startContactShieldNoPersistent', incubationPeriod ? incubationPeriod : ContactShieldSetting.DEFAULT_INCUBATION_PERIOD]);\r\n}\r\nexport function stopContactShield(): Promise<void> {\r\n    return asyncExec('HMSContactShield', 'ContactShieldModule', ['stopContactShield']);\r\n}\r\nexport function getContactSketch(token: string): Promise<ContactSketch> {\r\n    return asyncExec('HMSContactShield', 'ContactShieldModule', ['getContactSketch', token ? token : \"\"]);\r\n}\r\nexport function getContactWindow(token: string): Promise<ContactWindow[]> {\r\n    return asyncExec('HMSContactShield', 'ContactShieldModule', ['getContactWindow', token ? token : \"\"]);\r\n}\r\nexport function getPeriodicKey(): Promise<PeriodicKey[]> {\r\n    return asyncExec('HMSContactShield', 'ContactShieldModule', ['getPeriodicKey']);\r\n}\r\nexport async function isContactShieldRunning(): Promise<boolean> {\r\n    const { result } = await asyncExec('HMSContactShield', 'ContactShieldModule', ['isContactShieldRunning']);\r\n    return result;\r\n}\r\nexport function putSharedKeyFiles(sharedKeyData: SharedKeyData): Promise<void> {\r\n    // Set defaults\r\n    sharedKeyData.diagnosisConfiguration = Object.assign({\r\n        attenuationDurationThresholds: [50, 74],\r\n        attenuationRiskValues: [4, 4, 4, 4, 4, 4, 4, 4],\r\n        attenuationWeight: 50,\r\n        daysAfterContactedRiskValues: [4, 4, 4, 4, 4, 4, 4, 4],\r\n        daysAfterContactedWeight: 50,\r\n        durationRiskValues: [4, 4, 4, 4, 4, 4, 4, 4],\r\n        durationWeight: 50,\r\n        initialRiskLevelRiskValues: [4, 4, 4, 4, 4, 4, 4, 4],\r\n        initialRiskLevelWeight: 50,\r\n        minimumRiskValueThreshold: 1\r\n    }, sharedKeyData.diagnosisConfiguration)\r\n    return asyncExec('HMSContactShield', 'ContactShieldModule', ['putSharedKeyFiles', sharedKeyData]);\r\n}\r\nexport function putSharedKeyFilesOld(sharedKeyData: SharedKeyData): Promise<void> {\r\n    // Set defaults\r\n    sharedKeyData.diagnosisConfiguration = Object.assign({\r\n        attenuationDurationThresholds: [50, 74],\r\n        attenuationRiskValues: [4, 4, 4, 4, 4, 4, 4, 4],\r\n        attenuationWeight: 50,\r\n        daysAfterContactedRiskValues: [4, 4, 4, 4, 4, 4, 4, 4],\r\n        daysAfterContactedWeight: 50,\r\n        durationRiskValues: [4, 4, 4, 4, 4, 4, 4, 4],\r\n        durationWeight: 50,\r\n        initialRiskLevelRiskValues: [4, 4, 4, 4, 4, 4, 4, 4],\r\n        initialRiskLevelWeight: 50,\r\n        minimumRiskValueThreshold: 1\r\n    }, sharedKeyData.diagnosisConfiguration)\r\n    return asyncExec('HMSContactShield', 'ContactShieldModule', ['putSharedKeyFilesOld', sharedKeyData]);\r\n}\r\nexport function disableLogger(): Promise<void> {\r\n    return asyncExec('HMSContactShield', 'ContactShieldModule', ['disableLogger']);\r\n}\r\nexport function enableLogger(): Promise<void> {\r\n    return asyncExec('HMSContactShield', 'ContactShieldModule', ['enableLogger']);\r\n}\r\nexport function handleCallback(event: string, callback: (data: any) => void): void {\r\n    window.subscribeHMSEvent(event, callback);\r\n}\r\nexport function registerReceiver(): Promise<void> {\r\n    return asyncExec('HMSContactShield', 'ContactShieldModule', ['registerReceiver']);\r\n}\r\nexport function unregisterReceiver(): Promise<void> {\r\n    return asyncExec('HMSContactShield', 'ContactShieldModule', ['unregisterReceiver']);\r\n}\r\nexport function hasPermission(permission: HMSPermission): Promise<boolean> {\r\n    return asyncExec('HMSContactShield', 'ContactShieldModule', ['hasPermission', permission]);\r\n}\r\nexport function requestPermissions(permissions: HMSPermission[]): Promise<void> {\r\n    return asyncExec('HMSContactShield', 'ContactShieldModule', ['requestPermissions', permissions]);\r\n}\r\nexport function getStatus(): Promise<any> {\r\n    return asyncExec('HMSContactShield', 'ContactShieldModule', ['getStatus']);\r\n}\r\nexport function getContactShieldVersion(): Promise<number> {\r\n    return asyncExec('HMSContactShield', 'ContactShieldModule', ['getContactShieldVersion']);\r\n}\r\nexport function getDeviceCalibrationConfidence(): Promise<number> {\r\n    return asyncExec('HMSContactShield', 'ContactShieldModule', ['getDeviceCalibrationConfidence']);\r\n}\r\nexport function isSupportScanningWithoutLocation(): Promise<boolean> {\r\n    return asyncExec('HMSContactShield', 'ContactShieldModule', ['isSupportScanningWithoutLocation']);\r\n}\r\nexport function setSharedKeysDataMapping(sharedKey: SharedKeyDataMapping): Promise<any> {\r\n    return asyncExec('HMSContactShield', 'ContactShieldModule', ['setSharedKeysDataMapping', sharedKey]);\r\n}\r\nexport function getSharedKeysDataMapping(): Promise<SharedKeyDataMapping> {\r\n    return asyncExec('HMSContactShield', 'ContactShieldModule', ['getSharedKeysDataMapping']);\r\n}\r\nexport function getDailySketch(dailySketch: DailySketchConfiguration): Promise<any> {\r\n    // Set defaults\r\n    dailySketch = Object.assign({\r\n        weightsOfReportType: [0],\r\n        weightsOfContagiousness: [0],\r\n        thresholdOfAttenuationInDb: [0],\r\n        weightsOfAttenuationBucket: [0],\r\n        thresholdOfDaysSinceHit: 0,\r\n        minWindowScore: 0,\r\n    }, dailySketch)\r\n    return asyncExec('HMSContactShield', 'ContactShieldModule', ['getDailySketch', dailySketch]);\r\n}\r\nexport function putSharedKeyFilesKeys(sharedKeyFiles: SharedKeyDataKeys): Promise<any> {\r\n    // Set defaults\r\n    sharedKeyFiles.diagnosisConfiguration = Object.assign({\r\n        attenuationDurationThresholds: [50, 74],\r\n        attenuationRiskValues: [4, 4, 4, 4, 4, 4, 4, 4],\r\n        attenuationWeight: 50,\r\n        daysAfterContactedRiskValues: [4, 4, 4, 4, 4, 4, 4, 4],\r\n        daysAfterContactedWeight: 50,\r\n        durationRiskValues: [4, 4, 4, 4, 4, 4, 4, 4],\r\n        durationWeight: 50,\r\n        initialRiskLevelRiskValues: [4, 4, 4, 4, 4, 4, 4, 4],\r\n        initialRiskLevelWeight: 50,\r\n        minimumRiskValueThreshold: 1\r\n    }, sharedKeyFiles.diagnosisConfiguration)\r\n    return asyncExec('HMSContactShield', 'ContactShieldModule', ['putSharedKeyFilesKeys', sharedKeyFiles]);\r\n}\r\nexport function putSharedKeyFilesProvider(files: string[]): Promise<any> {\r\n    return asyncExec('HMSContactShield', 'ContactShieldModule', ['putSharedKeyFilesProvider', files]);\r\n}\r\n"]}