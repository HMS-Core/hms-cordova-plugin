{"version":3,"file":"HMSScan.js","sourceRoot":"","sources":["../src/www/HMSScan.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n    Copyright 2020-2023. Huawei Technologies Co., Ltd. All rights reserved.\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\")\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n        https://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n*/\r\nimport * as ScanKit from './interfaces';\r\nimport { asyncExec } from './util'\r\nexport { Colors, ScanTypes, RectStyle, HMSPermission, ErrorCorrectionLevel } from './interfaces'\r\nlet HMSScanClass: string = 'HMSScan';\r\nlet HMSScanModule: string = 'HMSScanModule';\r\n\r\nvar currentProps = {};\r\nvar element: HTMLElement | null = null;\r\nfunction getInitialProps(divId: string) {\r\n    element = document.getElementById(divId);\r\n    if (element === null) return {};\r\n    const clientRect = element.getBoundingClientRect();\r\n    const computedStyle = window.getComputedStyle(element, null);\r\n    let props: any = {};\r\n    props['x'] = clientRect.x;\r\n    props['y'] = clientRect.y;\r\n    props['width'] = parseInt(computedStyle.getPropertyValue('width'));\r\n    props['height'] = parseInt(computedStyle.getPropertyValue('height'));\r\n    return props;\r\n}\r\n\r\nfunction getInitialPropsMethod(divId: string) {\r\n    const initialProps = getInitialProps(divId);\r\n    const mutationObserver = new MutationObserver(() => {\r\n        if (element != null) {\r\n            forceUpdateXAndY();\r\n        }\r\n    });\r\n    const config = { attributes: true, childList: true, subtree: true };\r\n    mutationObserver.observe(document.body, config);\r\n    currentProps = initialProps;\r\n    return initialProps;\r\n}\r\n\r\nfunction forceUpdateXAndY() {\r\n    if (element === null) return;\r\n    const rect = element.getBoundingClientRect();\r\n    return asyncExec(HMSScanClass, HMSScanModule, ['forceUpdateXAndY',\r\n        rect.x, rect.y, window.pageXOffset, window.pageYOffset\r\n    ]);\r\n}\r\n\r\nexport function defaultViewMode(scanTypes: ScanKit.ScanTypes[], viewType: number, errorCheck: boolean) {\r\n    return asyncExec(HMSScanClass, HMSScanModule, ['defaultViewMode', scanTypes, viewType, errorCheck]);\r\n};\r\nexport function analyzInAsyn(filePath: string, scanTypes: ScanKit.ScanTypes[]) {\r\n    return asyncExec(HMSScanClass, HMSScanModule, ['analyzInAsyn', filePath, scanTypes]);\r\n};\r\nexport function analyseFrame(filePath: string, scanTypes: ScanKit.ScanTypes[]) {\r\n    return asyncExec(HMSScanClass, HMSScanModule, ['analyseFrame', filePath, scanTypes]);\r\n};\r\nexport function decode(scanFrameOptions: ScanKit.ScanFrameOptions, filePath?: string, divId?: string, customProps?: ScanKit.DecodeModeRequest) {\r\n    const initialProps = getInitialPropsMethod(divId);\r\n    return asyncExec(HMSScanClass, HMSScanModule, ['decode', scanFrameOptions, filePath, initialProps, customProps]);\r\n}\r\nexport function decodeWithBitmap(filePath: string, scanTypes: ScanKit.ScanTypes[]) {\r\n    return asyncExec(HMSScanClass, HMSScanModule, ['decodeWithBitmap', filePath, scanTypes]);\r\n};\r\nexport function buildBitmap(params: ScanKit.BuildBitmapRequest) {\r\n    return asyncExec(HMSScanClass, HMSScanModule, ['buildBitmap', params]);\r\n};\r\nexport function compressBitmap(path: string) {\r\n    return asyncExec(HMSScanClass, HMSScanModule, ['compressBitmap', path]);\r\n};\r\nexport function detectForHmsDector(path: string, scanTypes: ScanKit.ScanTypes[]) {\r\n    return asyncExec(HMSScanClass, HMSScanModule, ['detectForHmsDector', path, scanTypes]);\r\n};\r\nexport function enableLogger() {\r\n    return asyncExec(HMSScanClass, HMSScanModule, ['enableLogger']);\r\n};\r\nexport function disableLogger() {\r\n    return asyncExec(HMSScanClass, HMSScanModule, ['disableLogger']);\r\n};\r\nexport function hasPermission(permission: ScanKit.HMSPermission) {\r\n    return asyncExec(HMSScanClass, HMSScanModule, ['hasPermission', permission]);\r\n};\r\nexport function requestPermission(permission: ScanKit.HMSPermission) {\r\n    return asyncExec(HMSScanClass, HMSScanModule, ['requestPermission', permission]);\r\n};\r\nexport function requestPermissions(permissions: ScanKit.HMSPermission[]) {\r\n    return asyncExec(HMSScanClass, HMSScanModule, ['requestPermissions', permissions]);\r\n};\r\nexport function decodeOn(eventName: string, call: (value: any) => void): void {\r\n    window.subscribeHMSEvent(eventName, call);\r\n}\r\nexport function decodeStopViewService() {\r\n    return asyncExec(HMSScanClass, HMSScanModule, ['stopViewService']);\r\n}"]}