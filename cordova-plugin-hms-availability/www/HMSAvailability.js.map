{"version":3,"file":"HMSAvailability.js","sourceRoot":"","sources":["../src/www/HMSAvailability.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;;;;;;;EAcE;AACF,mCAAkC;AAalC,SAAgB,SAAS;IACrB,OAAO,iBAAS,CAAC,iBAAiB,EAAE,qBAAqB,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC;AAC9E,CAAC;AAFD,8BAEC;AAED,SAAgB,sBAAsB;IAClC,OAAO,iBAAS,CAAC,iBAAiB,EAAE,qBAAqB,EAAE,CAAC,wBAAwB,CAAC,CAAC,CAAC;AAC3F,CAAC;AAFD,wDAEC;AAED,SAAgB,cAAc,CAAC,SAAiB;IAC5C,OAAO,iBAAS,CAAC,iBAAiB,EAAE,qBAAqB,EAAE,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC,CAAC;AAC9F,CAAC;AAFD,wCAEC;AAED,SAAgB,+BAA+B,CAAC,aAAsB;IAClE,IAAI,aAAa,EAAE;QACf,OAAO,iBAAS,CAAC,iBAAiB,EAAE,qBAAqB,EAAE,CAAC,iCAAiC,EAAE,aAAa,CAAC,CAAC,CAAC;KAClH;SAAM;QACH,OAAO,iBAAS,CAAC,iBAAiB,EAAE,qBAAqB,EAAE,CAAC,iCAAiC,CAAC,CAAC,CAAC;KACnG;AACL,CAAC;AAND,0EAMC;AAED,SAAgB,6BAA6B;IACzC,OAAO,iBAAS,CAAC,iBAAiB,EAAE,qBAAqB,EAAE,CAAC,+BAA+B,CAAC,CAAC,CAAC;AAClG,CAAC;AAFD,sEAEC;AAED,SAAgB,qBAAqB,CAAC,SAAiB;IACnD,OAAO,iBAAS,CAAC,iBAAiB,EAAE,qBAAqB,EAAE,CAAC,uBAAuB,EAAE,SAAS,CAAC,CAAC,CAAC;AACrG,CAAC;AAFD,sDAEC;AAGD,SAAgB,YAAY,CAAC,SAAiB,EAAE,WAAmB;IAC/D,OAAO,iBAAS,CAAC,iBAAiB,EAAE,qBAAqB,EAAE,CAAC,cAAc,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC;AACzG,CAAC;AAFD,oCAEC;AAED,SAAgB,sBAAsB,CAAC,mBAA2B;IAC9D,OAAO,iBAAS,CAAC,iBAAiB,EAAE,qBAAqB,EAAE,CAAC,wBAAwB,EAAE,mBAAmB,CAAC,CAAC,CAAC;AAChH,CAAC;AAFD,wDAEC;AAED,SAAgB,uBAAuB,CAAC,SAAiB,EAAE,WAAmB,EAAE,cAA2B;IACvG,IAAI,cAAc,EAAE;QAChB,MAAM,CAAC,iBAAiB,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;QACrD,OAAO,iBAAS,CAAC,iBAAiB,EAAE,qBAAqB,EAAE,CAAC,yBAAyB,EAAE,SAAS,EAAE,WAAW,EAAE,cAAc,CAAC,CAAC,CAAC;KACnI;SAAM;QACH,OAAO,iBAAS,CAAC,iBAAiB,EAAE,qBAAqB,EAAE,CAAC,yBAAyB,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC;KACnH;AACL,CAAC;AAPD,0DAOC;AAED,SAAgB,qBAAqB,CAAC,SAAiB;IACnD,OAAO,iBAAS,CAAC,iBAAiB,EAAE,qBAAqB,EAAE,CAAC,uBAAuB,EAAE,SAAS,CAAC,CAAC,CAAC;AACrG,CAAC;AAFD,sDAEC","sourcesContent":["/*\r\n    Copyright 2020-2023. Huawei Technologies Co., Ltd. All rights reserved.\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\")\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n        https://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n*/\r\nimport {asyncExec} from './utils';\r\n\r\ninterface ApiMap {\r\n    'HuaweiIap.API': number,\r\n    'HuaweiID.API': number,\r\n    'HuaweiGame.API': number,\r\n    'HuaweiPay.API': number,\r\n    'HuaweiSns.API': number,\r\n    'HuaweiOpenDevice.API': number,\r\n    'HuaweiPPSkit.API': number,\r\n    'HuaweiPush.API': number\r\n}\r\n\r\nexport function getApiMap(): Promise<ApiMap> {\r\n    return asyncExec('HMSAvailability', 'HMSAvailabilityImpl', ['getApiMap']);\r\n}\r\n\r\nexport function getServicesVersionCode(): Promise<number> {\r\n    return asyncExec('HMSAvailability', 'HMSAvailabilityImpl', ['getServicesVersionCode']);\r\n}\r\n\r\nexport function getErrorString(errorCode: number): Promise<string> {\r\n    return asyncExec('HMSAvailability', 'HMSAvailabilityImpl', ['getErrorString', errorCode]);\r\n}\r\n\r\nexport function isHuaweiMobileServicesAvailable(minApkVersion?: number): Promise<number> {\r\n    if (minApkVersion) {\r\n        return asyncExec('HMSAvailability', 'HMSAvailabilityImpl', ['isHuaweiMobileServicesAvailable', minApkVersion]);\r\n    } else {\r\n        return asyncExec('HMSAvailability', 'HMSAvailabilityImpl', ['isHuaweiMobileServicesAvailable']);\r\n    }\r\n}\r\n\r\nexport function isHuaweiMobileNoticeAvailable(): Promise<number> {\r\n    return asyncExec('HMSAvailability', 'HMSAvailabilityImpl', ['isHuaweiMobileNoticeAvailable']);\r\n}\r\n\r\nexport function isUserResolvableError(errorCode: number): Promise<boolean> {\r\n    return asyncExec('HMSAvailability', 'HMSAvailabilityImpl', ['isUserResolvableError', errorCode]);\r\n}\r\n\r\n\r\nexport function resolveError(errorCode: number, requestCode: number): Promise<void> {\r\n    return asyncExec('HMSAvailability', 'HMSAvailabilityImpl', ['resolveError', errorCode, requestCode]);\r\n}\r\n\r\nexport function setServicesVersionCode(servicesVersionCode: number): Promise<void> {\r\n    return asyncExec('HMSAvailability', 'HMSAvailabilityImpl', ['setServicesVersionCode', servicesVersionCode]);\r\n}\r\n\r\nexport function showErrorDialogFragment(errorCode: number, requestCode: number, cancelListener?: () => void): Promise<boolean> {\r\n    if (cancelListener) {\r\n        window.subscribeHMSEvent(\"onCancel\", cancelListener);\r\n        return asyncExec('HMSAvailability', 'HMSAvailabilityImpl', ['showErrorDialogFragment', errorCode, requestCode, cancelListener]);\r\n    } else {\r\n        return asyncExec('HMSAvailability', 'HMSAvailabilityImpl', ['showErrorDialogFragment', errorCode, requestCode]);\r\n    }\r\n}\r\n\r\nexport function showErrorNotification(errorCode: number): Promise<void> {\r\n    return asyncExec('HMSAvailability', 'HMSAvailabilityImpl', ['showErrorNotification', errorCode]);\r\n}\r\n\r\n\r\n"]}
