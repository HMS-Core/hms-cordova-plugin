{"version":3,"file":"Interfaces.js","sourceRoot":"","sources":["../src/www/Interfaces.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n    Copyright 2020-2022. Huawei Technologies Co., Ltd. All rights reserved.\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\")\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n        https://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n*/\r\nexport interface RequestPermissionReq {\r\n    permissionList: Array<string>;\r\n}\r\nexport interface CheckPermissionReq {\r\n    permissionList: Array<string>;\r\n}\r\nexport interface statisticsnReq {\r\n    isAllowed: boolean;\r\n}\r\nexport interface MLBounds {\r\n    marginTop?: number;\r\n    marginBottom?: number;\r\n    marginLeft?: number;\r\n    marginRight?: number;\r\n}\r\nexport interface MLconfig {\r\n    lensEngineReq: lensEngineReq;\r\n}\r\nexport interface lensEngineReq {\r\n    analyzerName: MLAnalyzerName;\r\n    lensEngineSetting?: MLLensEngineSetting;\r\n    graphicSetting?:\r\n        | FaceGraphicSetting\r\n        | sceneSettings\r\n        | HandkeyGraphicSetting\r\n        | SkeletonGraphicSetting\r\n        | ObjectGraphicSetting\r\n        | null;\r\n    analyzerSetting?:\r\n        | mlFaceAnalyzerSetting\r\n        | MLFaceVerificationAnalyzerSetting\r\n        | mlHandKeypointSetting\r\n        | mlImageSegmentationSetting\r\n        | mlObjectAnalyserSetting\r\n        | null;\r\n}\r\nexport interface MLconfigComposite {\r\n    lensEngineReq: compositeAnalyser;\r\n}\r\nexport interface compositeAnalyser {\r\n    analyzerNames?: Array<MLAnalyzerName>;\r\n    lensEngineSetting?: MLLensEngineSetting;\r\n    grapgicSetting?:\r\n        | FaceGraphicSetting\r\n        | sceneSettings\r\n        | HandkeyGraphicSetting\r\n        | SkeletonGraphicSetting\r\n        | ObjectGraphicSetting\r\n        | null;\r\n    analyzerSetting?:\r\n        | mlFaceAnalyzerSetting\r\n        | MLFaceVerificationAnalyzerSetting\r\n        | mlHandKeypointSetting\r\n        | mlImageSegmentationSetting\r\n        | mlObjectAnalyserSetting\r\n        | null;\r\n}\r\nexport interface MLLensEngineSetting {\r\n    fps?: number | null;\r\n    displayDimensionI?: number | null;\r\n    displayDimensionI1?: number | null;\r\n    lensType?: MLLensType | null;\r\n    enableFocus?: boolean | null;\r\n    flashMode?: MLFlashMode | null;\r\n}\r\nexport enum MLFlashMode {\r\n    AUTO = \"auto\",\r\n    ON = \"on\",\r\n    OFF = \"off\",\r\n}\r\nexport enum MLLensType {\r\n    BACK_LENS = 0,\r\n    FRONT_LENS = 1,\r\n}\r\n\r\nexport interface syncRequestLocalLangDetect {\r\n    sourceText: string;\r\n    trustedThreshold?: number;\r\n}\r\nexport enum MLStillCompositerName {\r\n    FACE = \"FACE\",\r\n    HAND = \"HAND\",\r\n    SKELETON = \"SKELETON\",\r\n    OBJECT = \"OBJECT\",\r\n    TEXT = \"TEXT\",\r\n    CLASSIFICATION = \"classification\",\r\n}\r\nexport enum MLAnalyzerName {\r\n    LIVEFACE = \"FACE\",\r\n    LIVEFACE3D = \"FACE3D\",\r\n    LIVEFACEMAX = \"FACEMAX\",\r\n    LIVEHAND = \"HAND\",\r\n    LIVESKELETON = \"SKELETON\",\r\n    LIVEOBJECT = \"OBJECT\",\r\n    LIVECLASSIFICATION = \"CLASSIFICATION\",\r\n    LIVESCENE = \"SCENE\",\r\n    LIVETEXT = \"TEXT\",\r\n    LIVEGESTURE = \"GESTURE\",\r\n}\r\nexport interface doZoomReq {\r\n    scale?: number | null;\r\n}\r\nexport interface mlFrameReq {\r\n    actionName: MLFrame;\r\n    filePath: any;\r\n}\r\nexport enum MLFrame {\r\n    getPreviewBitmap = \"getPreviewBitmap\",\r\n    readBitmap = \"readBitmap\",\r\n    rotate = \"rotate\",\r\n    SCREEN_FIRST_QUADRANT = 0,\r\n    SCREEN_SECOND_QUADRANT = 1,\r\n    SCREEN_THIRD_QUADRANT = 2,\r\n    SCREEN_FOURTH_QUADRANT = 3,\r\n}\r\n \r\n// API KEY\r\n \r\n\r\nexport interface configReq {\r\n    apiKey: string;\r\n}\r\n\r\nexport interface appSettingReq {\r\n    apiKey?: string | null;\r\n    applicationId?: string | null;\r\n    certFingerprint?: string | null;\r\n}\r\n\r\n \r\n// COMPOSITE\r\n \r\nexport interface compositeAnalyserReq {\r\n    compositeAnalyserConfig: compositeAnalyserConfig;\r\n}\r\nexport interface compositeAnalyserConfig {\r\n    filePath: any;\r\n    analyzerNames?: Array<MLStillCompositerName>;\r\n    analyzerSetting?:\r\n        | mlFaceAnalyzerSetting\r\n        | MLFaceVerificationAnalyzerSetting\r\n        | mlHandKeypointSetting\r\n        | mlImageSegmentationSetting\r\n        | mlObjectAnalyserSetting\r\n        | null;\r\n}\r\n\r\n \r\n// AFT ANALYSER\r\n \r\n\r\nexport interface aftReq {\r\n    audioPath: any;\r\n    aftSetting?: AftSetting;\r\n}\r\n\r\nexport interface AftSetting {\r\n    languageCode?: string | null;\r\n    punctuationEnabled?: boolean | null;\r\n    timeOffset?: boolean | null;\r\n    wordTimeOffsetEnabled?: boolean | null;\r\n    sentenceTimeOffsetEnabled?: boolean | null;\r\n}\r\n\r\n \r\n// ASR ANALYSER\r\n \r\n\r\nexport interface asrReq {\r\n    language?: LANGUAGE | null;\r\n    feature?: FEATURE | null;\r\n}\r\n\r\nexport enum MLAsrConstants {\r\n    PUNCTUATION_ENABLE = \"PUNCTUATION_ENABLE\",\r\n    ERR_NO_NETWORK = 11202,\r\n    ERR_NO_UNDERSTAND = 11204,\r\n    ERR_SERVICE_UNAVAILABLE = 11203,\r\n    FEATURE = \"FEATURE\",\r\n    LANGUAGE = \"LANGUAGE\",\r\n    LAN_EN_US = \"en-US\",\r\n    LAN_FR_FR = \"fr-FR\",\r\n    LAN_ZH = \"zh\",\r\n    LAN_ZH_CN = \"zh-CN\",\r\n    LAN_ES_ES = \"es-ES\",\r\n    LAN_DE_DE = \"de-DE\",\r\n    LAN_RU_RU = \"ru-RU\",\r\n    LAN_IT_IT = \"it-IT\",\r\n    LAN_AR = \"ar\",\r\n    LAN_TH_TH = \"th_TH\",\r\n    LAN_MS_MY = \"ms_MY\",\r\n    LAN_FIL_PH = \"fil_PH\",\r\n    Turkish = \"tr-TR\",\r\n    ERR_INVALIDATE_TOKEN = 11219,\r\n    FEATURE_ALLINONE = 12,\r\n    FEATURE_WORDFLUX = 11,\r\n    SCENES = \"scenes\",\r\n    SCENES_SHOPPING = \"shopping\",\r\n    STATE_LISTENING = 1,\r\n    STATE_NO_NETWORK = 7,\r\n    STATE_NO_SOUND = 2,\r\n    STATE_NO_SOUND_TIMES_EXCEED = 3,\r\n    STATE_NO_UNDERSTAND = 6,\r\n    STATE_WAITING = 9,\r\n    ACTION_HMS_ASR_SPEECH = \"com.huawei.hms.mlsdk.action.RECOGNIZE_SPEECH\",\r\n    WAVE_PAINE_ENCODING = \"ENCODING\",\r\n    WAVE_PAINE_SAMPLE_RATE = \"SAMPLE_RATE\",\r\n    WAVE_PAINE_BIT_WIDTH = \"BIT_WIDTH\",\r\n    WAVE_PAINE_CHANNEL_COUNT = \"CHANNEL_COUNT\",\r\n}\r\n\r\nexport enum FEATURE {\r\n    FEATURE_ALLINONE = 12,\r\n    FEATURE_WORDFLUX = 11,\r\n}\r\n\r\nexport enum LANGUAGE {\r\n    LAN_EN_US = \"en-US\",\r\n    LAN_FR_FR = \"fr-FR\",\r\n    LAN_ZH = \"zh\",\r\n    LAN_ZH_CN = \"zh-CN\",\r\n    LAN_ES_ES = \"es-ES\",\r\n    LAN_DE_DE = \"de-DE\",\r\n    LAN_RU_RU = \"ru-RU\",\r\n    LAN_IT_IT = \"it-IT\",\r\n    LAN_AR = \"ar\",\r\n    LAN_TH_TH = \"th_TH\",\r\n    LAN_MS_MY = \"ms_MY\",\r\n    LAN_FIL_PH = \"fil_PH\",\r\n    Turkish = \"tr-TR\",\r\n}\r\n\r\nexport enum MLDocumentSkewCorrectionConstant {\r\n    SUCCESS = 0,\r\n    DETECT_FAILED = 1,\r\n    CORRECTION_FAILED = 2,\r\n    IMAGE_DATA_ERROR = 3,\r\n}\r\n \r\n// SDK BANK CARD ANALYSER\r\n \r\n\r\nexport interface bankCardSDKDetectorReq {\r\n    filePath: any;\r\n    detectType: 0;\r\n    mLBcrAnalyzerSetting?: MLBcrAnalyzerSetting | null;\r\n}\r\n\r\nexport interface MLBcrAnalyzerSetting {\r\n    langType?: string | null;\r\n    resultType?: MLBcrResultConfig | null;\r\n}\r\n\r\n \r\n// PLUGIN BANK CARD ANALYSER\r\n \r\n\r\nexport interface bankCardPluginDetectorReq {\r\n    detectType: 1;\r\n    mLBcrCaptureConfig?: mLBcrCaptureConfig | null;\r\n}\r\n\r\nexport interface mLBcrCaptureConfig {\r\n    orientation?: MLBcrCaptureConfig | null;\r\n    resultType?: MLBcrResultConfig | null;\r\n    recMode?: RecMode | null;\r\n}\r\n\r\nexport enum RecMode {\r\n    WEAK_MODE = 0,\r\n    STRICT_MODE = 1,\r\n}\r\n\r\nexport enum MLBcrCaptureConfig {\r\n    ERROR_CODE_INIT_CAMERA_FAILED = 10101,\r\n    RESULT_NUM_ONLY = 0,\r\n    ORIENTATION_AUTO = 0,\r\n    WEAK_MODE = 0,\r\n    ORIENTATION_LANDSCAPE = 1,\r\n    ORIENTATION_PORTRAIT = 2,\r\n    RESULT_ALL = 2,\r\n    RESULT_SIMPLE = 1,\r\n    STRICT_MODE = 1,\r\n}\r\nexport enum MLBcrResultConfig {\r\n    RESULT_NUM_ONLY = 0,\r\n    RESULT_SIMPLE = 1,\r\n    RESULT_ALL = 2,\r\n}\r\n\r\nexport interface MLBcrCaptureResult {\r\n    errorCode?: MLBcrCaptureErrorCode | null;\r\n    expire?: String | null;\r\n    issuer?: String | null;\r\n    number?: String | null;\r\n    numberBitmap?: any;\r\n    organization?: String | null;\r\n    riginalBitmap?: any;\r\n    type?: String | null;\r\n}\r\n\r\nexport enum MLBcrCaptureErrorCode {\r\n    ERROR_CODE_INIT_CAMERA_FAILED = 10101,\r\n}\r\n \r\n//Classify\r\n \r\n\r\nexport interface localImageClassificationReq {\r\n    ocrType: MLImageClassificationConfig | null;\r\n    analyseMode?: number | null;\r\n    localClassificationAnalyzerSetting?: LocalClassificationAnalyzerSetting | null;\r\n    filePath: any;\r\n}\r\nexport interface LocalClassificationAnalyzerSetting {\r\n    possibility?: number | null;\r\n}\r\n\r\nexport interface remoteImageClassificationReq {\r\n    ocrType: MLImageClassificationConfig;\r\n    analyseMode?: number;\r\n    remoteClassificationAnalyzerSetting?: RemoteClassificationAnalyzerSetting | null;\r\n    filePath: any;\r\n}\r\n\r\nexport interface RemoteClassificationAnalyzerSetting {\r\n    maxResults?: number | null;\r\n    possibility?: number | null;\r\n    isEnableFingerprintVerification?: boolean | null;\r\n}\r\n\r\nexport enum MLImageClassificationConfig {\r\n    TYPE_LOCAL = 0,\r\n    TYPE_REMOTE = 1,\r\n}\r\n\r\n \r\n//Custom Model Download\r\n \r\n\r\nexport interface downloadModelReq {\r\n    detectType: 1;\r\n    filePath: any;\r\n    downloadStrategySetting?: DownloadStrategySetting | null;\r\n}\r\n\r\nexport interface DownloadStrategySetting {\r\n    isChargingNeed: boolean | null;\r\n    isWifiNeed: boolean | null;\r\n    isDeviceIdleNeed: boolean | null;\r\n    setRegion?: DownloadStrategyCustom | null;\r\n}\r\nexport enum DownloadStrategyCustom {\r\n    REGION_DR_CHINA = 1002,\r\n    REGION_DR_AFILA = 1003,\r\n    REGION_DR_EUROPE = 1004,\r\n    REGION_DR_RUSSIA = 1005,\r\n}\r\n\r\nexport interface ownCustomModelReq {\r\n    detectType: number;\r\n    filePath: any;\r\n    modelFullName: string | null;\r\n    modelName: string | null;\r\n    labelFileName: string | null;\r\n    bitmapHeight: number | null;\r\n    bitmapWidth: number | null;\r\n    outPutSize: number | null;\r\n}\r\n\r\n \r\n//Document Analyser\r\n \r\n\r\nexport interface documentImageAnalyserReq {\r\n    documentSetting?: DocumentSetting | null;\r\n    filePath: any;\r\n}\r\nexport interface DocumentSetting {\r\n    borderType?: MLRemoteTextSetting | null;\r\n    LanguageList?: Array<string> | null;\r\n    enableFingerprintVerification: boolean | null;\r\n}\r\n\r\nexport enum MLRemoteTextSetting {\r\n    OCR_LOOSE_SCENE = 1,\r\n    OCR_COMPACT_SCENE = 2,\r\n    NGON = \"NGON\",\r\n    ARC = \"ARC\",\r\n    OTHER = 5,\r\n    NEW_LINE_CHARACTER = 8,\r\n    SPACE = 6,\r\n}\r\nexport enum languageListRemoteText {\r\n    LATIN = \"rm\",\r\n    ENGLISH = \"en\",\r\n    CHINESE = \"zh\",\r\n    JAPANESE = \"ja\",\r\n    KOREAN = \"ko\",\r\n    RUSSIAN = \"ru\",\r\n    GERMAN = \"de\",\r\n    FRENCH = \"fr\",\r\n    ITALIAN = \"it\",\r\n    PORTUGUESE = \"pt\",\r\n    SPANISH = \"es\",\r\n    POLISH = \"pl\",\r\n    NORWEGIAN = \"no\",\r\n    SWEDISH = \"sv\",\r\n    DANISH = \"da\",\r\n    TURKISH = \"tr\",\r\n    FINNISH = \"fi\",\r\n    THAI = \"th\",\r\n    ARABIC = \"ar\",\r\n    HINDI = \"hi\",\r\n}\r\n\r\n \r\n//Form Recognizer Analyser\r\n \r\n\r\nexport interface formRecognizerAnalyserReq {\r\n    filePath: any;\r\n    syncType: MLFormRecogitionConfig;\r\n}\r\nexport enum MLFormRecogitionConfig {\r\n    SYNC_TYPE = 1,\r\n    ASYNC_TYPE = 0,\r\n}\r\n\r\n \r\n//Document Skew Correction\r\n \r\n\r\nexport interface documentSkewCorrectionReq {\r\n    filePath: any;\r\n    syncMode?: MLFormRecogitionConfig | null;\r\n}\r\n\r\n \r\n// STILL && LIVE FACE ANALYSER\r\n \r\n\r\nexport interface faceReq {\r\n    mlFaceAnalyserSetting?: mlFaceAnalyzerSetting | null;\r\n    analyseMode?: MLFaceConfigs | null;\r\n    filePath: any;\r\n}\r\n\r\nexport interface faceVerificationReq {\r\n    mlFaceVerificationAnalyzerSetting?: MLFaceVerificationAnalyzerSetting | null;\r\n    syncType?: syncType | null;\r\n    filePath: any;\r\n    filePath2: any;\r\n}\r\n\r\nexport enum MLFaceConfigs {\r\n    TYPE_2D_SYNC = 0,\r\n    TYPE_2D_ASYNC = 1,\r\n    TYPE_3D_SYNC = 2,\r\n    TYPE_3D_ASYNC = 3,\r\n}\r\n\r\nexport interface FaceGraphicSetting {\r\n    facePositionPaintSetting?: FacePositionPaintSetting | null;\r\n    textPaintSetting?: TextPaintSettingFace | null;\r\n    faceFeaturePaintTextSetting?: FaceFeaturePaintTextSetting | null;\r\n    keypointPaintSetting?: KeypointPaintSetting | null;\r\n    boxPaintSetting?: BoxPaintSettingFace | null;\r\n    facePaintSetting?: FacePaintSetting | null;\r\n    eyePaintSetting?: EyePaintSetting | null;\r\n    eyebrowPaintSetting?: EyebrowPaintSetting | null;\r\n    nosePaintSetting?: NosePaintSetting | null;\r\n    noseBasePaintSetting?: NoseBasePaintSetting | null;\r\n    lipPaintSetting?: LipPaintSetting | null;\r\n}\r\nexport interface LipPaintSetting {\r\n    color?: String | Colors | null;\r\n    style?: RectStyle | null;\r\n    strokeWidth: Number | null;\r\n}\r\nexport interface NosePaintSetting {\r\n    color?: String | Colors | null;\r\n    style?: RectStyle | null;\r\n    strokeWidth?: Number;\r\n}\r\nexport interface NoseBasePaintSetting {\r\n    color?: String | Colors | null;\r\n    style?: RectStyle | null;\r\n    strokeWidth?: Number;\r\n}\r\nexport interface EyebrowPaintSetting {\r\n    color?: String | Colors | null;\r\n    style?: RectStyle;\r\n    strokeWidth?: Number;\r\n}\r\nexport interface EyePaintSetting {\r\n    color?: String | Colors;\r\n    style?: RectStyle | Colors;\r\n    strokeWidth: Number | null;\r\n}\r\nexport interface FacePaintSetting {\r\n    color?: String | Colors | null;\r\n    style?: RectStyle | null;\r\n    strokeWidth: Number | null;\r\n}\r\nexport interface BoxPaintSettingFace {\r\n    color?: String | Colors | null;\r\n    style?: RectStyle | null;\r\n    strokeWidth?: Number | null;\r\n}\r\nexport interface KeypointPaintSetting {\r\n    color?: Colors | Colors | null;\r\n    style?: RectStyle | null;\r\n    textSize: Number | null;\r\n}\r\n\r\nexport interface FaceFeaturePaintTextSetting {\r\n    color?: Colors | null;\r\n    textSize: Number | null;\r\n}\r\nexport interface FacePositionPaintSetting {\r\n    color?: Colors | null;\r\n}\r\nexport interface TextPaintSettingFace {\r\n    color?: Colors | null;\r\n    textSize?: Number | null;\r\n}\r\n\r\nexport interface MLFaceVerificationAnalyzerSetting {\r\n    maxFaceDetcted: number | null;\r\n}\r\nexport interface mlFaceAnalyzerSetting {\r\n    featureType?: MLFaceSetting | null;\r\n    keyPointType?: MLFaceSetting | null;\r\n    maxSizeFaceOnly?: boolean | null;\r\n    minFaceProportion?: number | null;\r\n    performanceType?: MLFaceSetting | null;\r\n    poseDisabled?: boolean | null;\r\n    shapeType?: MLFaceSetting | null;\r\n    tracingAllowed?: boolean | null;\r\n    tracingMode?: number | null;\r\n}\r\n\r\nexport enum MLFaceSetting {\r\n    MODE_TRACING_FAST = 1,\r\n    MODE_TRACING_ROBUST = 2,\r\n    TYPE_FEATURES = 1,\r\n    TYPE_FEATURE_AGE = 256,\r\n    TYPE_FEATURE_BEARD = 32,\r\n    TYPE_FEATURE_EMOTION = 4,\r\n    TYPE_FEATURE_EYEGLASS = 8,\r\n    TYPE_FEATURE_GENDAR = 128,\r\n    TYPE_FEATURE_HAT = 16,\r\n    TYPE_FEATURE_OPENCLOSEEYE = 64,\r\n    TYPE_KEYPOINTS = 1,\r\n    TYPE_PRECISION = 1,\r\n    TYPE_SHAPES = 2,\r\n    TYPE_SPEED = 2,\r\n    TYPE_UNSUPPORT_FEATURES = 2,\r\n    TYPE_UNSUPPORT_KEYPOINTS = 0,\r\n    TYPE_UNSUPPORT_SHAPES = 3,\r\n    TYPE_BOTTOM_OF_MOUTH = 1,\r\n    TYPE_LEFT_CHEEK = 2,\r\n    TYPE_LEFT_EAR = 3,\r\n    TYPE_LEFT_SIDE_OF_MOUTH = 6,\r\n    TYPE_RIGHT_CHEEK = 8,\r\n    TYPE_RIGHT_EAR = 9,\r\n    TYPE_RIGHT_SIDE_OF_MOUTH = 12,\r\n    TYPE_TIP_OF_LEFT_EAR = 4,\r\n    TYPE_TIP_OF_NOSE = 7,\r\n    TYPE_TIP_OF_RIGHT_EAR = 10,\r\n    TYPE_ALL = 0,\r\n    TYPE_BOTTOM_OF_LEFT_EYEBROW = 4,\r\n    TYPE_BOTTOM_OF_LOWER_LIP = 8,\r\n    TYPE_BOTTOM_OF_NOSE = 12,\r\n    TYPE_BOTTOM_OF_RIGHT_EYEBROW = 5,\r\n    TYPE_BOTTOM_OF_UPPER_LIP = 10,\r\n    TYPE_BRIDGE_OF_NOSE = 13,\r\n    TYPE_FACE = 1,\r\n    TYPE_TOP_OF_LEFT_EYEBROW = 6,\r\n    TYPE_TOP_OF_LOWER_LIP = 9,\r\n    TYPE_TOP_OF_RIGHT_EYEBROW = 7,\r\n    TYPE_TOP_OF_UPPER_LIP = 11,\r\n}\r\n\r\n \r\n// GENERAL CARD ANALYSER\r\n \r\n\r\nexport interface maxFaceVerificationReq {\r\n    MaxFaceDetcted?: number;\r\n}\r\n\r\nexport interface generalCardDetectorReq {\r\n    gcrCaptureConfig?: gcrCaptureConfig;\r\n    gcrCaptureUIConfig?: gcrCaptureUIConfig;\r\n    captureType?: gcrCaptureType | null;\r\n}\r\n\r\nexport interface gcrCaptureConfig {\r\n    language: string;\r\n}\r\nexport enum gcrCaptureType {\r\n    CAPTURE_ACTIVITY = 0,\r\n    CAPTURE_PHOTO = 1,\r\n    CAPTURE_IMAGE = 2,\r\n}\r\nexport interface gcrCaptureUIConfig {\r\n    orientation?: MLGcrCaptureUIConfig | null;\r\n    tipText?: string | null;\r\n    tipTextColor?: number | null;\r\n    photoButtonResId?: number | null;\r\n    scanBoxCornerColor?: number | null;\r\n    backButtonRedId?: number | null;\r\n    torchRedId?: number | null;\r\n}\r\nexport interface gcrSettingResults {\r\n    gcrConfigLanguage: String;\r\n    torchOnResId: number;\r\n    tipTextColor: number;\r\n    tipText: String;\r\n    backButtonResId: number;\r\n    orientation: number;\r\n    photoButtonResId: number;\r\n    scanBoxScreenRatio: number;\r\n    scanBoxCornerColor: number;\r\n    scanBoxAspectRatio: number;\r\n}\r\n\r\nexport enum MLGcrCaptureUIConfig {\r\n    ORIENTATION_AUTO = 0,\r\n    ORIENTATION_LANDSCAPE = 1,\r\n    ORIENTATION_PORTRAIT = 2,\r\n}\r\n\r\n \r\n// ID CARD ANALYSER\r\n \r\n\r\nexport interface icrVnDetectorReq {\r\n    captureType: icrCaptureType;\r\n    filePath?: any | null;\r\n}\r\n\r\nexport interface icrCnDetectorReq {\r\n    captureType: icrCaptureType;\r\n    filePath?: any | null;\r\n    isFront?: boolean | null;\r\n}\r\n\r\nexport enum icrCaptureType {\r\n    CAPTURE_CAMERA = 0,\r\n    CAPTURE_IMAGE = 1,\r\n}\r\n\r\nexport interface createIdCardReq {\r\n    mlIcrAnalyzerSetting?: MLIcrAnalyzerSetting | null;\r\n}\r\n\r\nexport interface localAnalyserReq {\r\n    settings: MLIcrAnalyzerSetting;\r\n    filePath?: any | null;\r\n}\r\nexport interface MLIcrAnalyzerSetting {\r\n    countryCode: string;\r\n    hashCode?: number | null;\r\n    sideType?: MLIcrSideType | null;\r\n}\r\n\r\nexport interface localAnalyzerReq {}\r\nexport enum MLIcrSideType {\r\n    FRONT = \"FRONT\",\r\n    BACK = \"BACK\",\r\n}\r\n\r\n \r\n//Live && Stil HandkeyPoint\r\n \r\n\r\nexport interface stillHandKeypointReq {\r\n    syncType?: syncType | null;\r\n    filePath: any;\r\n    handkeySetting?: mlHandKeypointSetting | null;\r\n}\r\n\r\nexport interface stillGestureReq {\r\n    syncType?: syncType | null;\r\n    filePath: any;\r\n}\r\n\r\nexport enum syncType {\r\n    SYNC_MODE = 0,\r\n    ASYNC_MODE = 1,\r\n}\r\n\r\nexport interface MLGesture {\r\n    rect?: Rect;\r\n    score?: number;\r\n    category?: number;\r\n    hashCode?: number;\r\n}\r\n\r\nexport enum GestureTypes {\r\n    ONE = 0,\r\n    SECOND = 1,\r\n    THREE = 2,\r\n    FOUR = 3,\r\n    FIVE = 4,\r\n    SIX = 5,\r\n    SEVEN = 6,\r\n    EIGHT = 7,\r\n    NINE = 8,\r\n    DISS = 9,\r\n    FIST = 10,\r\n    GOOD = 11,\r\n    HEART = 12,\r\n    OK = 13,\r\n    UNKNOWN = 14,\r\n}\r\n\r\nexport interface GestureGraphicSetting {\r\n    idPaintnewSetting?: IdPaintnewSetting | null;\r\n    rectPaintSetting?: RectPaintSetting | null;\r\n}\r\n\r\nexport interface HandkeyGraphicSetting {\r\n    idPaintnewSetting?: IdPaintnewSetting | null;\r\n    rectPaintSetting?: RectPaintSetting | null;\r\n}\r\nexport interface IdPaintnewSetting {\r\n    color?: Colors | null;\r\n    textSize?: Number | null;\r\n}\r\nexport interface RectPaintSetting {\r\n    color?: Colors | null;\r\n    style?: RectStyle | null;\r\n    boxStrokeWidth?: Number | null;\r\n}\r\nexport interface mlHandKeypointSetting {\r\n    sceneType?: HandkeyPointConfig | null;\r\n    maxHandResults?: number | null;\r\n}\r\nexport enum HandkeyPointConfig {\r\n    TYPE_ALL = 0,\r\n    TYPE_KEYPOINT_ONLY = 1,\r\n    TYPE_RECT_ONLY = 2,\r\n    MAX_HANDS_NUM = 10,\r\n}\r\n\r\n \r\n//Image Super Resolution\r\n \r\n\r\nexport interface imageSuperResolutionReq {\r\n    filePath: any;\r\n    imgSuperResolutionSetting?: ImgSuperResolutionSetting | null;\r\n    syncType?: MLFormRecogitionConfig | null;\r\n}\r\nexport interface ImgSuperResolutionSetting {\r\n    scaleType?: ImgSuperResolutionConfig;\r\n}\r\nexport enum ImgSuperResolutionConfig {\r\n    ISR_SCALE_1X = 1.0,\r\n    ISR_SCALE_3X = 3.0,\r\n}\r\n \r\n//Product Vision Analyser\r\n \r\n\r\nexport interface productReq {\r\n    filePath?: any | null;\r\n    detectType?: number;\r\n    mlProductSetting?: mlProductSetting | null;\r\n}\r\nexport interface mlProductSetting {\r\n    largestNumOfReturns?: number | null;\r\n    productSetId?: string | null;\r\n    region?: MLProductConfig | null;\r\n}\r\nexport enum MLProductConfig {\r\n    REGION_DR_CHINA = 1002,\r\n    REGION_DR_AFILA = 1003,\r\n    REGION_DR_EUROPE = 1004,\r\n    REGION_DR_RUSSIA = 1005,\r\n    REGION_DR_GERMAN = 1006,\r\n    REGION_DR_SIANGAPORE = 1007,\r\n}\r\n\r\n \r\n//Text Image Super Resolution\r\n \r\n\r\nexport interface textImageSuperResolutionReq {\r\n    filePath: any;\r\n    analyseMode?: MLFormRecogitionConfig | null;\r\n}\r\n\r\n \r\n//IMAGE STILL && LIVESEGMENTATION\r\n \r\n\r\nexport interface imgSegmentationReq {\r\n    imageSegmentationSetting?: mlImageSegmentationSetting;\r\n    filePath: any;\r\n    analyseMode?: MLFormRecogitionConfig | null;\r\n}\r\n\r\nexport interface mlImageSegmentationSetting {\r\n    isExact: boolean | null;\r\n    analyserType?: MLImageSegmentationSetting | null;\r\n    scene?: MLImageSegmentationScene;\r\n    hashCode?: number | null;\r\n}\r\n\r\nexport enum MLImageSegmentationSetting {\r\n    BODY_SEG = 0,\r\n    IMAGE_SEG = 1,\r\n    HAIR_SEG = 2,\r\n}\r\n\r\nexport enum MLImageSegmentationClassification {\r\n    TYPE_BACKGOURND = 0,\r\n    TYPE_HUMAN = 1,\r\n    TYPE_SKY = 2,\r\n    TYPE_GRASS = 3,\r\n    TYPE_FOOD = 4,\r\n    TYPE_CAT = 5,\r\n    TYPE_BUILD = 6,\r\n    TYPE_FLOWER = 7,\r\n    TYPE_WATER = 8,\r\n    TYPE_SAND = 9,\r\n    TYPE_MOUNTAIN = 10,\r\n}\r\nexport enum MLImageSegmentationScene {\r\n    ALL = 0,\r\n    MASK_ONLY = 1,\r\n    FOREGROUND_ONLY = 2,\r\n    GRAYSCALE_ONLY = 3,\r\n}\r\n\r\n \r\n//LAND MARK\r\n \r\n\r\nexport interface imgLandMarkReq {\r\n    landmarkAnalyzerSetting?: landmarkAnalyzerSetting;\r\n    filePath: any;\r\n}\r\n\r\nexport interface landmarkAnalyzerSetting {\r\n    maxResults?: number | null;\r\n    modelType?: MLRemoteLandmarkSetting | null;\r\n}\r\n\r\nexport enum MLRemoteLandmarkSetting {\r\n    STEADY_PATTERN = 1,\r\n    NEWEST_PATTERN = 2,\r\n}\r\n\r\n \r\n//Lang Detect\r\n \r\n\r\nexport interface remoteLangDetectionReq {\r\n    sourceText: string;\r\n    taskMode?: number;\r\n    trustedThreshold?: number;\r\n}\r\nexport interface localLangDetectionReq {\r\n    sourceText: string;\r\n    trustedThreshold?: number;\r\n}\r\n\r\nexport enum MLLanguageDetection {\r\n    FIRST_BEST_DETECTION_LANGUAGE_TRUSTED_THRESHOLD = 0.5,\r\n    PROBABILITY_DETECTION_LANGUAGE_TRUSTED_THRESHOLD = 0.01,\r\n    UNDETECTION_LANGUAGE_TRUSTED_THRESHOLD = \"unknown\",\r\n}\r\n\r\n \r\n//Liveness Detection\r\n \r\n\r\nexport interface livenessDetectionReq {\r\n    analyserMode?: MLLivenessCaptureResult | null;\r\n}\r\nexport enum MLLivenessConfig {\r\n    DEFAULT = 0,\r\n    CUSTOM = 1,\r\n}\r\nexport enum MLLivenessCaptureError {\r\n    CAMERA_NO_PERMISSION = 11401,\r\n    CAMERA_START_FAILED = 11402,\r\n    USER_CANCEL = 11403,\r\n    DETECT_FACE_TIME_OUT = 11404,\r\n    DETECT_MASK = 1,\r\n}\r\n\r\n \r\n// STILL && LIVEOBJECT  ANALYSER\r\n \r\n\r\nexport interface objectReq {\r\n    filePath: any;\r\n    mlObjectAnalyserSetting?: mlObjectAnalyserSetting;\r\n    syncType?: MLFormRecogitionConfig | null;\r\n}\r\nexport interface ObjectGraphicSetting {\r\n    boxPaintSetting?: BoxPaintSetting | null;\r\n    textPaintSetting?: TextPaintSetting | null;\r\n}\r\nexport interface BoxPaintSetting {\r\n    color?: Colors | null;\r\n    style?: RectStyle | null;\r\n    boxStrokeWidth?: Number | null;\r\n}\r\nexport interface TextPaintSetting {\r\n    color?: Colors | null;\r\n    textSize?: Number | null;\r\n}\r\nexport interface mlObjectAnalyserSetting {\r\n    isClassificationAllowed?: boolean | null;\r\n    isMultipleResultsAllowed?: boolean | null;\r\n    analyzerType: MlObjectAnalyserConfig;\r\n}\r\nexport enum MlObjectAnalyserConfig {\r\n    TYPE_PICTURE = 0,\r\n    TYPE_VIDEO = 1,\r\n    TYPE_OTHER = 0,\r\n    TYPE_GOODS = 1,\r\n    TYPE_FOOD = 2,\r\n    TYPE_FURNITURE = 3,\r\n    TYPE_PLANT = 4,\r\n    TYPE_PLACE = 5,\r\n    TYPE_FACE = 6,\r\n}\r\n\r\n \r\n//RTT\r\n \r\n\r\nexport interface rttReq {\r\n    mLSpeechRealTimeTranscriptionConfig: MLSpeechRealTimeTranscriptionConfig;\r\n}\r\nexport interface MLSpeechRealTimeTranscriptionConfig {\r\n    language: MLRttLanguages | null;\r\n    punctuationEnable: boolean | null;\r\n    wordTimeOffsetEnable: boolean | null;\r\n    sentenceTimeOffsetEnable: boolean | null;\r\n    scenes?: MLRttScenes | null;\r\n}\r\nexport enum MLRttLanguages {\r\n    LAN_ZH_CN = \"zh-CN\",\r\n    LAN_EN_US = \"en-US\",\r\n    LAN_FR_FR = \"fr-FR\",\r\n    LAN_ES_ES = \"es-ES\",\r\n    LAN_EN_IN = \"en-IN\",\r\n    LAN_DE_DE = \"de-DE\",\r\n}\r\nexport enum MLRttScenes {\r\n    SCENES_SHOPPINGf = \"shopping\",\r\n}\r\nexport enum MLSpeechRealTimeTranscriptionConstants {\r\n    ERR_INVALIDE_TOKEN = 13219,\r\n    ERR_NO_NETWORK = 13202,\r\n    ERR_SERVICE_CREDIT = 13222,\r\n    ERR_SERVICE_UNSUBSCRIBED = 13223,\r\n    ERR_SERVICE_FREE_USED_UP = 13224,\r\n    ERR_SERVICE_UNAVAILABLE = 13203,\r\n    LAN_EN_US = \" en-US\",\r\n    LAN_FR_FR = \"fr-FR\",\r\n    LAN_ZH_CN = \"zh-CN\",\r\n    RESULTS_PARTIALFINAL = \"RESULTS_PARTIALFINAL\",\r\n    RESULTS_RECOGNIZING = \"results_recognizing\",\r\n    RESULTS_SENTENCE_OFFSET = \"RESULTS_SENTENCE_OFFSET\",\r\n    RESULTS_WORD_OFFSET = \"RESULTS_WORD_OFFSET\",\r\n    SCENES_SHOPPING = \"shopping\",\r\n    STATE_SERVICE_RECONNECTED = 43,\r\n    STATE_SERVICE_RECONNECTING = 42,\r\n    STATE_LISTENING = 1,\r\n    STATE_NO_NETWORK = 7,\r\n    STATE_NO_UNDERSTAND = 6,\r\n    WAVE_PAINE_BIT_WIDTH = \"BIT_WIDTH\",\r\n    WAVE_PAINE_CHANNEL_COUNT = \"CHANNEL_COUNT\",\r\n    WAVE_PAINE_ENCODING = \"ENCODING\",\r\n    WAVE_PAINE_SAMPLE_RATE = \"SAMPLE_RATE\",\r\n}\r\n\r\n \r\n//STILL && LIVE SCENE ANALYSER\r\n \r\n\r\nexport interface stillSceneReq {\r\n    filePath: any;\r\n    analyseMode?: syncType | null;\r\n}\r\n\r\nexport interface sceneSettings {\r\n    color?: Colors | null;\r\n    textSize?: Number | null;\r\n}\r\n\r\n \r\n//STILL && LIVE SKELETON ANALYSER\r\n \r\n\r\nexport interface stillSkeletonReq {\r\n    filePath: any;\r\n    syncType: MLSkeletonConfig;\r\n    analyzerType: MLSkeletonConfig;\r\n}\r\nexport interface stillSkeletonSimilarityReq {\r\n    filePath: any;\r\n    filepath2: any;\r\n    syncType: MLSkeletonConfig;\r\n    analyzerType: MLSkeletonConfig;\r\n}\r\nexport enum MLSkeletonConfig {\r\n    SYNC_MODE = 0,\r\n    ASYNC_MODE = 1,\r\n    SIMILARITTY_MODE = 2,\r\n    TYPE_YOGA = 1,\r\n    TYPE_NORMAL = 0,\r\n}\r\n\r\nexport interface SkeletonGraphicSetting {\r\n    circlePaintSetting?: circlePaintSetting | null;\r\n    linePaintSetting?: linePaintSetting | null;\r\n}\r\nexport interface circlePaintSetting {\r\n    color?: Colors | null;\r\n    style?: RectStyle | null;\r\n    antiAlias?: boolean | null;\r\n}\r\nexport interface linePaintSetting {\r\n    color?: Colors | null;\r\n    style?: RectStyle | null;\r\n    strokeWidth?: Number | null;\r\n    antiAlias?: boolean | null;\r\n}\r\n\r\n \r\n//Text Analyser\r\n \r\nexport interface localImageTextReq {\r\n    ocrType: MLTextConfig;\r\n    analyseMode?: number;\r\n    localTextSetting?: localTextSetting | null;\r\n    filePath: any;\r\n}\r\n\r\nexport interface localTextSetting {\r\n    ocrMode?: MLLocalTextSetting;\r\n    language?: string;\r\n}\r\n\r\nexport enum MLLocalTextSetting {\r\n    OCR_DETECT_MODE = 1,\r\n    OCR_TRACKING_MODE = 2,\r\n}\r\nexport enum MLTextConfig {\r\n    OCR_LOCAL_TYPE = 0,\r\n    OCR_REMOTE_TYPE = 1,\r\n}\r\nexport interface remoteImageTextReq {\r\n    ocrType: MLTextConfig;\r\n    analyseMode?: number;\r\n    remoteTextSetting?: remoteTextSetting;\r\n    filePath: any;\r\n}\r\nexport interface remoteTextSetting {\r\n    textDensityScene?: MLRemoteTextSetting;\r\n    languageList?: Array<string>;\r\n    borderType?: MLRemoteTextSetting;\r\n}\r\n\r\n \r\n//TRANSLATE\r\n \r\n\r\nexport interface remotetranslateReq {\r\n    USE_SYNC: boolean;\r\n    targetLangCode: MLTranslateLanguages;\r\n    sourceLangCode?: MLTranslateLanguages;\r\n    sourceText: string;\r\n}\r\nexport interface localtranslateReq {\r\n    USE_SYNC: boolean;\r\n    targetLangCode: MLTranslateLanguages;\r\n    sourceLangCode: MLTranslateLanguages;\r\n    sourceText: string;\r\n}\r\nexport interface deleteTranslateReq {\r\n    USE_SYNC: boolean;\r\n    langcode: string;\r\n}\r\nexport interface downloadTranslateReq {\r\n    USE_SYNC: boolean;\r\n    langcode: string;\r\n}\r\nexport interface localAllLangReq {\r\n    USE_SYNC: boolean;\r\n}\r\nexport interface remoteAllLangReq {\r\n    USE_SYNC: boolean;\r\n}\r\n\r\nexport enum MLTranslateLanguages {\r\n    AFRIKAANS = \"af\",\r\n    ARABIC = \"ar\",\r\n    BULGARIAN = \"bg\",\r\n    BURMESE = \"my\",\r\n    CROATIAN = \"hr\",\r\n    CZECH = \"cs\",\r\n    CHINESE = \"zh\",\r\n    TRADITIONAL_CHINESE = \"zh-hk\",\r\n    DANISH = \"da\",\r\n    DUTCH = \"nl\",\r\n    ESTONIAN = \"et\",\r\n    ENGLISH = \"en\",\r\n    FINNISH = \"fi\",\r\n    FRENCH = \"fr\",\r\n    GERMAN = \"de\",\r\n    GUJARATI = \"gu\",\r\n    GREEK = \"el\",\r\n    HUNGARIAN = \"hu\",\r\n    HINDI = \"hi\",\r\n    HEBREW = \"he\",\r\n    IRISH = \"is\",\r\n    ITALIAN = \"it\",\r\n    INDONESIAN = \"id\",\r\n    KHMER = \"km\",\r\n    KOREAN = \"ko\",\r\n    JAPANESE = \"ja\",\r\n    LATIN = \"rm\",\r\n    LATVIAN = \"lv\",\r\n    MALAY = \"ms\",\r\n    MARATHI = \"mr\",\r\n    NORWEGIAN = \"no\",\r\n    PUNJABI = \"pa\",\r\n    POLISH = \"pl\",\r\n    PORTUGUESE = \"pt\",\r\n    PERSIAN = \"fa\",\r\n    RUSSIAN = \"ru\",\r\n    ROMANIAN = \"ro\",\r\n    SERBIAN = \"sr\",\r\n    SPANISH = \"es\",\r\n    SLOVAK = \"sk\",\r\n    SWEDISH = \"sv\",\r\n    TAMIL = \"ta\",\r\n    TURKISH = \"tr\",\r\n    THAI = \"th\",\r\n    TAGALOG = \"tl\",\r\n    TELUGU = \"te\",\r\n    VIETNAMESE = \"vi\",\r\n}\r\n \r\n// Sound Dect\r\n \r\n\r\nexport interface soundDectReq {\r\n    startType: boolean | null;\r\n}\r\n \r\n// Text Embedding\r\n \r\n\r\nexport interface textEmbeddingDicInfoReq {\r\n    textEmbeddingSetting: textEmbeddingSetting;\r\n}\r\nexport interface textEmbeddingWordtoVectorReq {\r\n    textEmbeddingSetting?: textEmbeddingSetting;\r\n    wordText: string;\r\n}\r\nexport interface textEmbeddingSentencetoVectorReq {\r\n    textEmbeddingSetting?: textEmbeddingSetting;\r\n    sentenceText: string;\r\n}\r\nexport interface textEmbeddingWordSimilarityReq {\r\n    textEmbeddingSetting?: textEmbeddingSetting;\r\n    wordText1: string;\r\n    wordText2: string;\r\n}\r\nexport interface textEmbeddingSentenceSimilarityReq {\r\n    textEmbeddingSetting?: textEmbeddingSetting;\r\n    sentenceText1: string;\r\n    sentenceText2: string;\r\n}\r\nexport interface textEmbeddingSimilarWordsReq {\r\n    textEmbeddingSetting?: textEmbeddingSetting;\r\n    multipleText: string;\r\n    similarityNumber: number;\r\n}\r\nexport interface textEmbeddingWordBatchReq {\r\n    textEmbeddingSetting?: textEmbeddingSetting;\r\n    batchText: string;\r\n}\r\n\r\nexport interface textEmbeddingSetting {\r\n    language: TextLanguage;\r\n}\r\n\r\nexport enum TextLanguage {\r\n    LANGUAGE_ZH = \"zh\",\r\n    LANGUAGE_EN = \"em\",\r\n}\r\n\r\nexport enum MLTextEmbeddibgExceptions {\r\n    LANGUAGE_ZH = \"zh\",\r\n    LANGUAGE_EN = \"en\",\r\n    ERR_SERVICE_IS_UNAVAILABLE = 12199,\r\n    RR_NET_UNAVAILABLE = 12198,\r\n    ERR_INNER = 12101,\r\n    ERR_AUTH_FAILED = 12102,\r\n    ERR_PARAM_ILLEGAL = 12103,\r\n    ERR_ANALYZE_FAILED = 12104,\r\n    ERR_AUTH_TOKEN_INVALIDE = 12105,\r\n}\r\n \r\n// TTS ANALYSER\r\n \r\n\r\nexport interface MLTtsSpeaker {\r\n    language?: string | null;\r\n    modelSize?: string | null;\r\n    name?: string | null;\r\n    speakerDesc?: string | null;\r\n}\r\n\r\nexport interface ttsEngineReq {\r\n    language?: string | null;\r\n    playerVolume?: number | null;\r\n}\r\n\r\nexport interface ttsAnalyserSettingsResults {\r\n    languages: String[];\r\n    speakers: MLTtsSpeaker;\r\n    speaker: MLTtsSpeaker;\r\n    isLanguageAvailable: number;\r\n}\r\n\r\nexport interface ttsReq {\r\n    text: string;\r\n    mlConfigs: MLConfigs;\r\n    queuingMode: MLTtsConstants;\r\n}\r\n\r\nexport interface MLTtsAudioFragment {\r\n    audioData?: number | null;\r\n    audioFormat?: number | null;\r\n    channelInfo?: number | null;\r\n    SampleRateInHz?: number | null;\r\n}\r\n\r\nexport enum MLTtsAudioFragmentConstant {\r\n    CHANNEL_OUT_MONO = 4,\r\n    FORMAT_PCM_16BIT = 2,\r\n    FORMAT_PCM_8BIT = 1,\r\n    SAMPLE_RATE_16K = 16000,\r\n}\r\nexport interface MLConfigs {\r\n    language: MLTtsConstants;\r\n    person: MLTtsConstants;\r\n    speed: number;\r\n    volume: number;\r\n    synthesizeMode: MLTtsConstants;\r\n}\r\nexport enum MLTtsConstants {\r\n    EVENT_PLAY_START = 1,\r\n    EVENT_PLAY_RESUME = 2,\r\n    EVENT_PLAY_PAUSE = 3,\r\n    EVENT_PLAY_STOP = 4,\r\n    EVENT_SYNTHESIS_START = 5,\r\n    EVENT_SYNTHESIS_END = 6,\r\n    EVENT_SYNTHESIS_COMPLETE = 7,\r\n    EVENT_PLAY_STOP_INTERRUPTED = \"interrupted\",\r\n    EVENT_SYNTHESIS_INTERRUPTED = \"interrupted\",\r\n    LANGUAGE_AVAILABLE = 0,\r\n    LANGUAGE_NOT_SUPPORT = 1,\r\n    LANGUAGE_UPDATING = 2,\r\n    TTS_EN_US = \"en-US\",\r\n    TTS_LAN_AR_AR = \"ar-AR\",\r\n    TTS_LAN_TR_TR = \"tr-TR\",\r\n    TTS_SPEAKER_FEMALE_AR = \"ar-AR-st-1\",\r\n    TTS_SPEAKER_FEMALE_TR = \"tr-TR-st-1\",\r\n    TTS_LAN_ES_ES = \"es-ES\",\r\n    TTS_LAN_FR_FR = \"fr-FR\",\r\n    TTS_LAN_DE_DE = \"de-DE\",\r\n    TTS_LAN_IT_IT = \"it-IT\",\r\n    TTS_LAN_RU_RU = \"ru-RU\",\r\n    TTS_LAN_PL_PL = \"pl-PL\",\r\n    TTS_LAN_TH_TH = \" th-TH\",\r\n    TTS_LAN_MS_MS = \"ms-MS\",\r\n    TTS_ZH_HANS = \"zh-Hans\",\r\n    TTS_SPEAKER_FEMALE_EN = \"Female-en\",\r\n    TTS_SPEAKER_FEMALE_ZH = \"Female-zh\",\r\n    TTS_SPEAKER_MALE_EN = \"Male-en\",\r\n    TTS_SPEAKER_MALE_ZH = \"Male-zh\",\r\n    TTS_SPEAKER_MALE_ZH_2 = \"zh-Hans-st-4\",\r\n    TTS_SPEAKER_FEMALE_ZH_2 = \"zh-Hans-st-3\",\r\n    TTS_SPEAKER_MALE_EN_2 = \"en-US-st-4\",\r\n    TTS_SPEAKER_FEMALE_EN_2 = \"en-US-st-3\",\r\n    TTS_SPEAKER_FEMALE_DE = \"de-DE-st-1\",\r\n    TTS_SPEAKER_FEMALE_ES = \"it-IT-st-1\",\r\n    TTS_SPEAKER_FEMALE_IT = \"es-ES-st-1\",\r\n    TTS_SPEAKER_FEMALE_FR = \"fr-FR-st-1\",\r\n    TTS_SPEAKER_FEMALE_RU = \"ru-RU-st-1\",\r\n    TTS_SPEAKER_FEMALE_PL = \"pl-PL-st-1\",\r\n    TTS_SPEAKER_FEMALE_TH = \"th-TH-st-1\",\r\n    TTS_SPEAKER_FEMALE_MS = \"ms-MS-st-1\",\r\n    TTS_SPEAKER_OFFLINE_EN_US_MALE_BOLT = \"en-US-st-bolt-2\",\r\n    TTS_SPEAKER_OFFLINE_ZH_HANS_FEMALE_EAGLE = \"zh-Hans-st-eagle-1\",\r\n    TTS_SPEAKER_OFFLINE_ZH_HANS_MALE_EAGLE = \"zh-Hans-st-eagle-2\",\r\n    TTS_SPEAKER_OFFLINE_EN_US_FEMALE_EAGLE = \"en-US-st-eagle-1\",\r\n    TTS_SPEAKER_OFFLINE_EN_US_MALE_EAGLE = \"en-US-st-eagle-2\",\r\n    TTS_SPEAKER_OFFLINE_EN_US_FEMALE_BEE = \"en-US-st-bee-1\",\r\n    TTS_SPEAKER_OFFLINE_FR_FR_FEMALE_BEE = \"fr-FR-st-bee-1\",\r\n    TTS_SPEAKER_OFFLINE_ES_ES_FEMALE_BEE = \"es-ES-st-bee-1\",\r\n    TTS_SPEAKER_OFFLINE_DE_DE_FEMALE_BEE = \"de-DE-st-bee-1\",\r\n    TTS_SPEAKER_OFFLINE_IT_IT_FEMALE_BEE = \"it-IT-st-bee-1\",\r\n    TTS_SPEAKER_OFFLINE_ZH_HANS_FEMALE_BOLT = \"zh-Hans-st-bolt-1\",\r\n    TTS_SPEAKER_OFFLINE_ZH_HANS_MALE_BOLT = \"zh-Hans-st-bolt-2\",\r\n    TTS_SPEAKER_OFFLINE_EN_US_FEMALE_BOLT = \"en-US-st-bolt-1\",\r\n    TTS_ONLINE_MODE = \"online\",\r\n    TTS_OFFLINE_MODE = \"offline\",\r\n    QUEUE_APPEND = 0,\r\n    QUEUE_FLUSH = 1,\r\n    EXTERNAL_PLAYBACK = 2,\r\n    OPEN_STREAM = 4,\r\n}\r\n\r\nexport enum Colors {\r\n    RED = -65536,\r\n    DKGRAY = -12303292,\r\n    GRAY = -7829368,\r\n    WHITE = -1,\r\n    BLUE = -16776961,\r\n    BLACK = -16777216,\r\n    LTGRAY = -3355444,\r\n    MAGENTA = -65281,\r\n    YELLOW = -256,\r\n    CYAN = -16711681,\r\n    GREEN = -16711936,\r\n    TRANSPARENT = 0,\r\n}\r\nexport enum RectStyle {\r\n    STROKE = 1,\r\n    FILL = 2,\r\n    FILL_AND_STROKE = 3,\r\n}\r\n\r\nexport enum MLTtsError {\r\n    ERR_AUDIO_PLAYER_FAILED = 11305,\r\n    ERR_AUTHORIZE_FAILED = 11306,\r\n    ERR_AUTHORIZE_TOKEN_INVALIDE = 11307,\r\n    ERR_ILLEGAL_PARAMETER = 11301,\r\n    ERR_INSUFFICIENT_BALANCE = 11303,\r\n    ERR_INTERNAL = 11398,\r\n    ERR_NETCONNECT_FAILED = 11302,\r\n    ERR_SPEECH_SYNTHESIS_FAILED = 11304,\r\n    ERR_UNKNOWN = 11399,\r\n}\r\n/*\r\n----------------- return\r\n*/\r\n\r\nexport interface MLAftResult {\r\n    eventName: string;\r\n    text: string;\r\n    taskId: string;\r\n    complete: boolean;\r\n}\r\nexport interface MLAftErrorResult {\r\n    eventName: string;\r\n    taskId: string;\r\n    errorCode: MLAftErrorCodes;\r\n    message: string;\r\n}\r\nexport enum MLAftErrorCodes {\r\n    ERR_AUDIO_FILE_NOTSUPPORTED = 11101,\r\n    LANGUAGE_CODE_NOTSUPPORTED = 11102,\r\n    ERR_AUDIO_FILE_SIZE_OVERFLOW = 11103,\r\n    ERR_AUDIO_LENGTH_OVERFLOW = 11104,\r\n    ERR_FILE_NOT_FOUND = 11105,\r\n    ERR_ILLEGAL_PARAMETER = 11106,\r\n    ERR_ENGINE_BUSY = 11107,\r\n    ERR_NETCONNECT_FAILED = 11108,\r\n    ERR_RESULT_WHEN_UPLOADING = 11109,\r\n    ERR_TASK_NOT_EXISTED = 11110,\r\n    ERR_AUDIO_TRANSCRIPT_FAILED = 11111,\r\n    ERR_AUDIO_INIT_FAILED = 11112,\r\n    ERR_AUDIO_UPLOAD_FAILED = 11113,\r\n    ERR_TASK_ALREADY_INPROGRESS = 11114,\r\n    ERR_NO_ENOUGH_STORAGE = 11115,\r\n    ERR_AUTHORIZE_FAILED = 11119,\r\n    ERR_SERVICE_CREDIT = 11122,\r\n    ERR_SERVICE_UNSUBSCRIBED = 11123,\r\n    ERR_SERVICE_FREE_USED_UP = 11124,\r\n    ERR_INTERNAL = 11198,\r\n    ERR_UNKNOWN = 11199,\r\n}\r\nexport interface MLAftEventResult {\r\n    eventName: string;\r\n    taskId: string;\r\n    ext: string;\r\n    eventId: string;\r\n}\r\nexport enum MLAFTEventCodes {\r\n    PAUSE_EVENT = 2,\r\n    STOP_EVENT = 3,\r\n    UPLOADED_EVENT = 1,\r\n}\r\n\r\nexport enum MLAftConstants {\r\n    LANGUAGE_ZH = \"zh\",\r\n    LANGUAGE_EN_US = \"en-US\",\r\n}\r\nexport interface MLBankCard {\r\n    number: string;\r\n    expire: string;\r\n    issuer: string;\r\n    type: string;\r\n    organization: string;\r\n    originalBitmap: any;\r\n    numberBitmap: any;\r\n}\r\n\r\nexport interface MLCustomBankCard {\r\n    number: string;\r\n    expire: string;\r\n    issuer: string;\r\n    type: string;\r\n    organization: string;\r\n    originalBitmap: any;\r\n    numberBitmap: any;\r\n}\r\n\r\nexport interface MLFaceVerificationResult {\r\n    faceInfo?: MLFaceInfo[] | null;\r\n    similarity?: number | null;\r\n    templateId?: number | null;\r\n}\r\n\r\nexport interface MLFaceTemplateResult {\r\n    faceInfo?: MLFaceInfo[] | null;\r\n    hashcode?: number | null;\r\n    templateId?: number | null;\r\n}\r\nexport interface MLFaceInfo {\r\n    faceRect?: Rect[] | null;\r\n    hashCode?: number | null;\r\n}\r\n\r\nexport interface MLFace {\r\n    Result?: ResultEntity[] | null;\r\n}\r\nexport interface ResultEntity {\r\n    opennessOfLeftEye: number;\r\n    tracingIdentity: number;\r\n    possibilityOfSmiling: number;\r\n    opennessOfRightEye: number;\r\n    rotationAngleX: number;\r\n    rotationAngleY: number;\r\n    rotationAngleZ: number;\r\n    height: number;\r\n    width: number;\r\n    border: Border;\r\n    features: Features;\r\n    emotions: Emotions;\r\n    allPoints?: AllPointsEntity[] | null;\r\n    keyPoints?: null[] | null;\r\n    faceShapeList?: FaceShapeListEntity[] | null;\r\n}\r\n\r\nexport enum MLFaceConstant {\r\n    UNANALYZED_POSSIBILITY = -1.0,\r\n}\r\nexport interface Border {\r\n    bottom: number;\r\n    top: number;\r\n    left: number;\r\n    right: number;\r\n    exactCenterX: number;\r\n    centerY: number;\r\n    centerX: number;\r\n    describeContents: number;\r\n    height: number;\r\n    width: number;\r\n}\r\nexport interface Features {\r\n    sunGlassProbability: number;\r\n    sexProbability: number;\r\n    rightEyeOpenProbability: number;\r\n    moustacheProbability: number;\r\n    leftEyeOpenProbability: number;\r\n    age: number;\r\n    hatProbability: number;\r\n}\r\nexport interface Emotions {\r\n    surpriseProbability: number;\r\n    smilingProbability: number;\r\n    sadProbability: number;\r\n    neutralProbability: number;\r\n    fearProbability: number;\r\n    disgustProbability: number;\r\n    angryProbability: number;\r\n}\r\nexport interface AllPointsEntity {\r\n    X: number;\r\n    Y: number;\r\n}\r\nexport interface FaceShapeListEntity {\r\n    points?: PointsEntity[] | null;\r\n    faceShapeType: number;\r\n}\r\nexport interface PointsEntity {\r\n    X: number;\r\n    Y: number;\r\n    Z: number;\r\n}\r\n\r\nexport interface MLImageClassification {\r\n    result?: ResultEntity[] | null;\r\n}\r\nexport interface ResultEntity {\r\n    identity: string;\r\n    name: string;\r\n    possibility: number;\r\n    hashCode: number;\r\n}\r\n\r\nexport interface MLDocument {\r\n    stringValue: string;\r\n    blocks?: Blocks[];\r\n}\r\nexport interface Blocks {\r\n    stringValue: string;\r\n    possibility: number;\r\n    border: Border;\r\n    interval: Interval;\r\n    sections?: Sections[];\r\n}\r\nexport interface Border {\r\n    bottom: number;\r\n    top: number;\r\n    left: number;\r\n    right: number;\r\n    exactCenterX: number;\r\n    centerY: number;\r\n    centerX: number;\r\n    describeContents: number;\r\n    height: number;\r\n    width: number;\r\n}\r\nexport interface Interval {\r\n    intervalType: number;\r\n    isTextFollowed: boolean;\r\n}\r\nexport interface Sections {\r\n    stringValue: string;\r\n    border: Border;\r\n    interval: Interval;\r\n    possibility: number;\r\n    languageList?: LanguageList[];\r\n    lineList?: LineList[];\r\n}\r\nexport interface LanguageList {\r\n    language: string;\r\n}\r\nexport interface LineList {\r\n    stringValue: string;\r\n    border: Border;\r\n    possibility: number;\r\n    languageList?: LanguageList[];\r\n    wordList?: WordList[];\r\n}\r\nexport interface WordList {\r\n    stringValue: string;\r\n    border: Border;\r\n    characterList?: CharacterList[];\r\n    languageList?: LanguageList[];\r\n    possibility?: number;\r\n    interval?: Interval;\r\n}\r\nexport interface CharacterList {\r\n    stringValue: string;\r\n    possibility: number;\r\n    border?: Border;\r\n    languageList?: LanguageList[];\r\n    interval?: Interval;\r\n}\r\n\r\nexport interface MLDocumentSkewDetectResult {\r\n    resultCode: number;\r\n    bitmap: any;\r\n}\r\n\r\nexport interface MLVnIcrCaptureResult {\r\n    birthday: string;\r\n    cardBitmap: Bitmap;\r\n    idNum: string;\r\n    name: string;\r\n    sex: string;\r\n}\r\n\r\nexport interface MLCnIcrCaptureResult {\r\n    birthday: string;\r\n    cardBitmap: Bitmap;\r\n    idNum: string;\r\n    name: string;\r\n    sex: string;\r\n    nation: string;\r\n    address: string;\r\n    authority: string;\r\n    validDate: string;\r\n}\r\n\r\nexport interface MLIcrCaptureResult {\r\n    birthday: string;\r\n    cardBitmap: Bitmap;\r\n    idNum: string;\r\n    name: string;\r\n    sex: string;\r\n    nation: string;\r\n    address: string;\r\n    validDate: string;\r\n}\r\n\r\nexport interface MLGcrCaptureResult {\r\n    text: string;\r\n    cardBitmap: Bitmap;\r\n}\r\n\r\nexport interface MLHandKeypoints {\r\n    handkeyPoints: handkeyPoints;\r\n    rect: Rect;\r\n    score: number;\r\n}\r\nexport interface handkeyPoints {\r\n    pointX: number;\r\n    pointY: number;\r\n    score: number;\r\n    type: handkeyPointsTypes;\r\n}\r\nexport enum handkeyPointsTypes {\r\n    TYPE_WRIST = 0,\r\n    TYPE_THUMB_FIRST = 1,\r\n    TYPE_THUMB_SECOND = 2,\r\n    TYPE_THUMB_THIRD = 3,\r\n    TYPE_THUMB_FOURTH = 4,\r\n    TYPE_FOREFINGER_FIRST = 5,\r\n    TYPE_FOREFINGER_SECOND = 6,\r\n    TYPE_FOREFINGER_THIRD = 7,\r\n    TYPE_FOREFINGER_FOURTH = 8,\r\n    TYPE_MIDDLE_FINGER_FIRST = 9,\r\n    TYPE_MIDDLE_FINGER_SECOND = 10,\r\n    TYPE_MIDDLE_FINGER_THIRD = 11,\r\n    TYPE_MIDDLE_FINGER_FOURTH = 12,\r\n    TYPE_RING_FINGER_FIRST = 13,\r\n    TYPE_RING_FINGER_SECOND = 14,\r\n    TYPE_RING_FINGER_THIRD = 15,\r\n    TYPE_RING_FINGER_FOURTH = 16,\r\n    TYPE_LITTLE_FINGER_FIRST = 17,\r\n    TYPE_LITTLE_FINGER_SECOND = 18,\r\n    TYPE_LITTLE_FINGER_THIRD = 19,\r\n    TYPE_LITTLE_FINGER_FOURTH = 20,\r\n}\r\n\r\nexport interface Rect {\r\n    bottom: number;\r\n    top: number;\r\n    left: number;\r\n    right: number;\r\n    exactCenterX: number;\r\n    centerY: number;\r\n    centerX: number;\r\n    describeContents: number;\r\n    height: number;\r\n    width: number;\r\n}\r\n\r\nexport interface MLImageSegmentation {\r\n    bitmapForeground: any;\r\n    bitmapGrayscale: any;\r\n    masks: number;\r\n    bitmapOriginal: any;\r\n}\r\nexport interface MLRemoteLandmark {\r\n    landmark: string;\r\n    landmarkIdentity: string;\r\n    possibility: number;\r\n    border: Border;\r\n    positionInfo?: PositionInfoEntity[] | null;\r\n}\r\nexport interface Border {\r\n    bottom: number;\r\n    top: number;\r\n    left: number;\r\n    right: number;\r\n    exactCenterX: number;\r\n    centerY: number;\r\n    centerX: number;\r\n    describeContents: number;\r\n    height: number;\r\n    width: number;\r\n}\r\nexport interface PositionInfoEntity {\r\n    lng: number;\r\n    lat: number;\r\n}\r\n\r\nexport interface MLRemoteLangDetection {\r\n    langCode: string;\r\n    probability: number;\r\n    hashCode: number;\r\n}\r\n\r\nexport interface MLlangDetectionWithFirstDetect {\r\n    langCode: string;\r\n}\r\n\r\nexport interface MLLivenessCaptureResult {\r\n    bitmap: Bitmap;\r\n    isLive: boolean;\r\n    pitch: number;\r\n    roll: number;\r\n    score: number;\r\n    yaw: number;\r\n}\r\nexport interface Bitmap {\r\n    mGalleryCached: boolean;\r\n    mHeight: number;\r\n    mNativePtr: number;\r\n    mWidth: number;\r\n}\r\n\r\nexport interface MLObject {\r\n    typeIdentity: number;\r\n    typePossibility: number;\r\n    border: Border;\r\n}\r\nexport interface Border {\r\n    bottom: number;\r\n    top: number;\r\n    left: number;\r\n    right: number;\r\n    exactCenterX: number;\r\n    centerY: number;\r\n    centerX: number;\r\n    describeContents: number;\r\n    height: number;\r\n    width: number;\r\n}\r\n\r\nexport interface MLSkeleton {\r\n    joints: MLJoint;\r\n    JointPoint: MLJointPoints;\r\n}\r\nexport interface MLJoint {\r\n    x: number;\r\n    y: number;\r\n    score: number;\r\n    type: number;\r\n    hashCode: number;\r\n}\r\nexport enum MLJointPoints {\r\n    TYPE_RIGHT_SHOULDER = 101,\r\n    TYPE_RIGHT_ELBOW = 102,\r\n    TYPE_RIGHT_WRIST = 103,\r\n    TYPE_LEFT_SHOULDER = 104,\r\n    TYPE_LEFT_ELBOW = 105,\r\n    TYPE_LEFT_WRIST = 106,\r\n    TYPE_RIGHT_HIP = 107,\r\n    TYPE_RIGHT_KNEE = 108,\r\n    TYPE_RIGHT_ANKLE = 109,\r\n    TYPE_LEFT_HIP = 110,\r\n    TYPE_LEFT_KNEE = 111,\r\n    TYPE_LEFT_ANKLE = 112,\r\n    TYPE_HEAD_TOP = 113,\r\n    TYPE_NECK = 114,\r\n}\r\n\r\nexport interface MLText {\r\n    stringValue: string;\r\n    blocks?: Blocks[];\r\n}\r\nexport interface Blocks {\r\n    contents?: Contents[];\r\n}\r\nexport interface Contents {\r\n    stringValue: string;\r\n    rotatingDegree: number;\r\n    isVertical: boolean;\r\n    language: string;\r\n    border: Border;\r\n    contents?: Contents[];\r\n}\r\nexport interface Border {\r\n    bottom: number;\r\n    top: number;\r\n    left: number;\r\n    right: number;\r\n    exactCenterX: number;\r\n    centerY: number;\r\n    centerX: number;\r\n    describeContents: number;\r\n    height: number;\r\n    width: number;\r\n}\r\nexport interface Contents {\r\n    stringValue: string;\r\n    border: Border;\r\n    language: string;\r\n    languageList?: LanguageList[];\r\n    vertexes?: Vertexes[];\r\n}\r\nexport interface LanguageList {\r\n    language: string;\r\n}\r\nexport interface Vertexes {\r\n    x: number;\r\n    y: number;\r\n    describeContents: number;\r\n}\r\n\r\nexport interface MLTtsResult {\r\n    eventName: string;\r\n    taskID: string;\r\n    start: number;\r\n    end: number;\r\n}\r\nexport interface MLSceneDetectionResult {\r\n    resultString: string;\r\n    confidence: number;\r\n}\r\n\r\nexport interface LiveScenAnalyser {\r\n    analyseList: [AnalyseList];\r\n    frameProperty: FrameProperty;\r\n}\r\nexport interface AnalyseList {\r\n    0: a;\r\n}\r\nexport interface a {\r\n    result: string;\r\n    confidence: number;\r\n}\r\nexport interface FrameProperty {\r\n    ext: string;\r\n    formatType: number;\r\n    height: number;\r\n    itemIdentity: number;\r\n    quadrant: number;\r\n    timestamp: number;\r\n    width: number;\r\n}\r\n\r\nexport interface MLSoundDectResult {\r\n    soundType: MLSoundDectSoundTypeResult;\r\n    eventName: string;\r\n}\r\nexport enum MLSoundDectSoundTypeResult {\r\n    SOUND_DECT_ERROR_NO_MEM = 12201,\r\n    SOUND_DECT_ERROR_FATAL_ERROR = 12202,\r\n    SOUND_DECT_ERROR_AUDIO = 12203,\r\n    SOUND_DECT_ERROR_INTERNAL = 12298,\r\n    SOUND_EVENT_TYPE_LAUGHTER = 0,\r\n    SOUND_EVENT_TYPE_BABY_CRY = 1,\r\n    SOUND_EVENT_TYPE_SNORING = 2,\r\n    SOUND_EVENT_TYPE_SNEEZE = 3,\r\n    SOUND_EVENT_TYPE_SCREAMING = 4,\r\n    SOUND_EVENT_TYPE_MEOW = 5,\r\n    SOUND_EVENT_TYPE_BARK = 6,\r\n    SOUND_EVENT_TYPE_WATER = 7,\r\n    SOUND_EVENT_TYPE_CAR_ALARM = 8,\r\n    SOUND_EVENT_TYPE_DOOR_BELL = 9,\r\n    SOUND_EVENT_TYPE_KNOCK = 10,\r\n    SOUND_EVENT_TYPE_ALARM = 11,\r\n    SOUND_EVENT_TYPE_STEAM_WHISTLE = 12,\r\n}\r\n\r\nexport interface MLVocabularyVersion {\r\n    dictionaryDimension: string;\r\n    dictionarySize: string;\r\n    versionNo: string;\r\n}\r\n\r\nexport interface MLWordtoVectorResult {\r\n    result: Result;\r\n}\r\nexport interface Result {\r\n    wordText: string;\r\n    vector: string;\r\n}\r\nexport interface MlSentencetoVectorResult {\r\n    sentence: string;\r\n    vector: string;\r\n}\r\nexport interface MLWordSimilarityResult {\r\n    wordSimilarity: number;\r\n}\r\nexport interface MLSentenceSimilarityResult {\r\n    sentenceSimilarity: number;\r\n}\r\nexport interface MLSimilarWordsResult {\r\n    result?: string[] | null;\r\n}\r\nexport interface MLFormRecogitionResult {\r\n    retCode: number;\r\n    tableContent: TableContent;\r\n}\r\n\r\nexport interface TableContent {\r\n    tableCount: number;\r\n    tables?: TablesEntity[] | null;\r\n}\r\nexport interface TablesEntity {\r\n    tableID: number;\r\n    headerInfo: string;\r\n    footerInfo: string;\r\n    tableBody?: TableBodyEntity[] | null;\r\n}\r\nexport interface TableBodyEntity {\r\n    startRow: number;\r\n    endRow: number;\r\n    startCol: number;\r\n    endCol: number;\r\n    cellCoordinate: CellCoordinate;\r\n    textInfo: string;\r\n}\r\nexport interface CellCoordinate {\r\n    topLeft_x: number;\r\n    topLeft_y: number;\r\n    topRight_x: number;\r\n    topRight_y: number;\r\n    bottomLeft_x: number;\r\n    bottomLeft_y: number;\r\n    bottomRight_x: number;\r\n    bottomRight_y: number;\r\n}\r\n\r\nexport interface MLProductVisionResult {\r\n    type: string;\r\n    border: Border;\r\n    list?: ListEntity[] | null;\r\n}\r\nexport interface Border {\r\n    bottom: number;\r\n    top: number;\r\n    left: number;\r\n    right: number;\r\n    exactCenterX: number;\r\n    centerY: number;\r\n    centerX: number;\r\n    describeContents: number;\r\n    height: number;\r\n    width: number;\r\n}\r\nexport interface ListEntity {\r\n    customcontent: string;\r\n    imagelist?: ImagelistEntity[] | null;\r\n    possibility: number;\r\n    productURL: string;\r\n}\r\nexport interface ImagelistEntity {\r\n    imageId: string;\r\n    possibility: number;\r\n    productId: string;\r\n}\r\n\r\nexport enum CordovaErrors {\r\n    UNKNOWN = -1,\r\n    SUCCESS = 0,\r\n    DISCARDED = 1,\r\n    INNER = 2,\r\n    INACTIVE = 3,\r\n    NOT_SUPPORTED = 4,\r\n    ILLEGAL_PARAMETER = 5,\r\n    OVERDUE = 6,\r\n    NO_FOUND = 7,\r\n    DUPLICATE_FOUND = 8,\r\n    NO_PERMISSION = 9,\r\n    INSUFFICIENT_RESOURCE = 10,\r\n    ANALYSIS_FAILURE = 11,\r\n    INTERRUPTED = 12,\r\n    EXCEED_RANGE = 13,\r\n    DATA_MISSING = 14,\r\n    AUTHENTICATION_REQUIRED = 15,\r\n    TFLITE_NOT_COMPATIBLE = 16,\r\n    INSUFFICIENT_SPACE = 17,\r\n    HASH_MISS = 18,\r\n    TOKEN_INVALID = 19,\r\n    SERVICE_FAILURE = 20,\r\n    ANALYSIS_NULL = 21,\r\n}\r\n"]}